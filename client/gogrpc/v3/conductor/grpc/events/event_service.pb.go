// Code generated by protoc-gen-go. DO NOT EDIT.
// source: grpc/event_service.proto

package events // import "github.com/mactaggart/conductor/client/gogrpc/v3/conductor/grpc/events"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import model "github.com/mactaggart/conductor/client/gogrpc/v3/conductor/model"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AddEventHandlerRequest struct {
	Handler              *model.EventHandler `protobuf:"bytes,1,opt,name=handler,proto3" json:"handler,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AddEventHandlerRequest) Reset()         { *m = AddEventHandlerRequest{} }
func (m *AddEventHandlerRequest) String() string { return proto.CompactTextString(m) }
func (*AddEventHandlerRequest) ProtoMessage()    {}
func (*AddEventHandlerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_service_dce147a8cf8cf5fc, []int{0}
}
func (m *AddEventHandlerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddEventHandlerRequest.Unmarshal(m, b)
}
func (m *AddEventHandlerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddEventHandlerRequest.Marshal(b, m, deterministic)
}
func (dst *AddEventHandlerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddEventHandlerRequest.Merge(dst, src)
}
func (m *AddEventHandlerRequest) XXX_Size() int {
	return xxx_messageInfo_AddEventHandlerRequest.Size(m)
}
func (m *AddEventHandlerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddEventHandlerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddEventHandlerRequest proto.InternalMessageInfo

func (m *AddEventHandlerRequest) GetHandler() *model.EventHandler {
	if m != nil {
		return m.Handler
	}
	return nil
}

type AddEventHandlerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddEventHandlerResponse) Reset()         { *m = AddEventHandlerResponse{} }
func (m *AddEventHandlerResponse) String() string { return proto.CompactTextString(m) }
func (*AddEventHandlerResponse) ProtoMessage()    {}
func (*AddEventHandlerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_service_dce147a8cf8cf5fc, []int{1}
}
func (m *AddEventHandlerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddEventHandlerResponse.Unmarshal(m, b)
}
func (m *AddEventHandlerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddEventHandlerResponse.Marshal(b, m, deterministic)
}
func (dst *AddEventHandlerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddEventHandlerResponse.Merge(dst, src)
}
func (m *AddEventHandlerResponse) XXX_Size() int {
	return xxx_messageInfo_AddEventHandlerResponse.Size(m)
}
func (m *AddEventHandlerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddEventHandlerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddEventHandlerResponse proto.InternalMessageInfo

type UpdateEventHandlerRequest struct {
	Handler              *model.EventHandler `protobuf:"bytes,1,opt,name=handler,proto3" json:"handler,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *UpdateEventHandlerRequest) Reset()         { *m = UpdateEventHandlerRequest{} }
func (m *UpdateEventHandlerRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateEventHandlerRequest) ProtoMessage()    {}
func (*UpdateEventHandlerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_service_dce147a8cf8cf5fc, []int{2}
}
func (m *UpdateEventHandlerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateEventHandlerRequest.Unmarshal(m, b)
}
func (m *UpdateEventHandlerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateEventHandlerRequest.Marshal(b, m, deterministic)
}
func (dst *UpdateEventHandlerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateEventHandlerRequest.Merge(dst, src)
}
func (m *UpdateEventHandlerRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateEventHandlerRequest.Size(m)
}
func (m *UpdateEventHandlerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateEventHandlerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateEventHandlerRequest proto.InternalMessageInfo

func (m *UpdateEventHandlerRequest) GetHandler() *model.EventHandler {
	if m != nil {
		return m.Handler
	}
	return nil
}

type UpdateEventHandlerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateEventHandlerResponse) Reset()         { *m = UpdateEventHandlerResponse{} }
func (m *UpdateEventHandlerResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateEventHandlerResponse) ProtoMessage()    {}
func (*UpdateEventHandlerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_service_dce147a8cf8cf5fc, []int{3}
}
func (m *UpdateEventHandlerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateEventHandlerResponse.Unmarshal(m, b)
}
func (m *UpdateEventHandlerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateEventHandlerResponse.Marshal(b, m, deterministic)
}
func (dst *UpdateEventHandlerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateEventHandlerResponse.Merge(dst, src)
}
func (m *UpdateEventHandlerResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateEventHandlerResponse.Size(m)
}
func (m *UpdateEventHandlerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateEventHandlerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateEventHandlerResponse proto.InternalMessageInfo

type RemoveEventHandlerRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveEventHandlerRequest) Reset()         { *m = RemoveEventHandlerRequest{} }
func (m *RemoveEventHandlerRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveEventHandlerRequest) ProtoMessage()    {}
func (*RemoveEventHandlerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_service_dce147a8cf8cf5fc, []int{4}
}
func (m *RemoveEventHandlerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveEventHandlerRequest.Unmarshal(m, b)
}
func (m *RemoveEventHandlerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveEventHandlerRequest.Marshal(b, m, deterministic)
}
func (dst *RemoveEventHandlerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveEventHandlerRequest.Merge(dst, src)
}
func (m *RemoveEventHandlerRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveEventHandlerRequest.Size(m)
}
func (m *RemoveEventHandlerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveEventHandlerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveEventHandlerRequest proto.InternalMessageInfo

func (m *RemoveEventHandlerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type RemoveEventHandlerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveEventHandlerResponse) Reset()         { *m = RemoveEventHandlerResponse{} }
func (m *RemoveEventHandlerResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveEventHandlerResponse) ProtoMessage()    {}
func (*RemoveEventHandlerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_service_dce147a8cf8cf5fc, []int{5}
}
func (m *RemoveEventHandlerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveEventHandlerResponse.Unmarshal(m, b)
}
func (m *RemoveEventHandlerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveEventHandlerResponse.Marshal(b, m, deterministic)
}
func (dst *RemoveEventHandlerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveEventHandlerResponse.Merge(dst, src)
}
func (m *RemoveEventHandlerResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveEventHandlerResponse.Size(m)
}
func (m *RemoveEventHandlerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveEventHandlerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveEventHandlerResponse proto.InternalMessageInfo

type GetEventHandlersRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventHandlersRequest) Reset()         { *m = GetEventHandlersRequest{} }
func (m *GetEventHandlersRequest) String() string { return proto.CompactTextString(m) }
func (*GetEventHandlersRequest) ProtoMessage()    {}
func (*GetEventHandlersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_service_dce147a8cf8cf5fc, []int{6}
}
func (m *GetEventHandlersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventHandlersRequest.Unmarshal(m, b)
}
func (m *GetEventHandlersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventHandlersRequest.Marshal(b, m, deterministic)
}
func (dst *GetEventHandlersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventHandlersRequest.Merge(dst, src)
}
func (m *GetEventHandlersRequest) XXX_Size() int {
	return xxx_messageInfo_GetEventHandlersRequest.Size(m)
}
func (m *GetEventHandlersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventHandlersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventHandlersRequest proto.InternalMessageInfo

type GetEventHandlersForEventRequest struct {
	Event                string   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	ActiveOnly           bool     `protobuf:"varint,2,opt,name=active_only,json=activeOnly,proto3" json:"active_only,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEventHandlersForEventRequest) Reset()         { *m = GetEventHandlersForEventRequest{} }
func (m *GetEventHandlersForEventRequest) String() string { return proto.CompactTextString(m) }
func (*GetEventHandlersForEventRequest) ProtoMessage()    {}
func (*GetEventHandlersForEventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_service_dce147a8cf8cf5fc, []int{7}
}
func (m *GetEventHandlersForEventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEventHandlersForEventRequest.Unmarshal(m, b)
}
func (m *GetEventHandlersForEventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEventHandlersForEventRequest.Marshal(b, m, deterministic)
}
func (dst *GetEventHandlersForEventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEventHandlersForEventRequest.Merge(dst, src)
}
func (m *GetEventHandlersForEventRequest) XXX_Size() int {
	return xxx_messageInfo_GetEventHandlersForEventRequest.Size(m)
}
func (m *GetEventHandlersForEventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEventHandlersForEventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetEventHandlersForEventRequest proto.InternalMessageInfo

func (m *GetEventHandlersForEventRequest) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *GetEventHandlersForEventRequest) GetActiveOnly() bool {
	if m != nil {
		return m.ActiveOnly
	}
	return false
}

type GetQueuesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetQueuesRequest) Reset()         { *m = GetQueuesRequest{} }
func (m *GetQueuesRequest) String() string { return proto.CompactTextString(m) }
func (*GetQueuesRequest) ProtoMessage()    {}
func (*GetQueuesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_service_dce147a8cf8cf5fc, []int{8}
}
func (m *GetQueuesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetQueuesRequest.Unmarshal(m, b)
}
func (m *GetQueuesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetQueuesRequest.Marshal(b, m, deterministic)
}
func (dst *GetQueuesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetQueuesRequest.Merge(dst, src)
}
func (m *GetQueuesRequest) XXX_Size() int {
	return xxx_messageInfo_GetQueuesRequest.Size(m)
}
func (m *GetQueuesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetQueuesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetQueuesRequest proto.InternalMessageInfo

type GetQueuesResponse struct {
	EventToQueueUri      map[string]string `protobuf:"bytes,1,rep,name=event_to_queue_uri,json=eventToQueueUri,proto3" json:"event_to_queue_uri,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetQueuesResponse) Reset()         { *m = GetQueuesResponse{} }
func (m *GetQueuesResponse) String() string { return proto.CompactTextString(m) }
func (*GetQueuesResponse) ProtoMessage()    {}
func (*GetQueuesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_service_dce147a8cf8cf5fc, []int{9}
}
func (m *GetQueuesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetQueuesResponse.Unmarshal(m, b)
}
func (m *GetQueuesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetQueuesResponse.Marshal(b, m, deterministic)
}
func (dst *GetQueuesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetQueuesResponse.Merge(dst, src)
}
func (m *GetQueuesResponse) XXX_Size() int {
	return xxx_messageInfo_GetQueuesResponse.Size(m)
}
func (m *GetQueuesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetQueuesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetQueuesResponse proto.InternalMessageInfo

func (m *GetQueuesResponse) GetEventToQueueUri() map[string]string {
	if m != nil {
		return m.EventToQueueUri
	}
	return nil
}

type GetQueueSizesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetQueueSizesRequest) Reset()         { *m = GetQueueSizesRequest{} }
func (m *GetQueueSizesRequest) String() string { return proto.CompactTextString(m) }
func (*GetQueueSizesRequest) ProtoMessage()    {}
func (*GetQueueSizesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_service_dce147a8cf8cf5fc, []int{10}
}
func (m *GetQueueSizesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetQueueSizesRequest.Unmarshal(m, b)
}
func (m *GetQueueSizesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetQueueSizesRequest.Marshal(b, m, deterministic)
}
func (dst *GetQueueSizesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetQueueSizesRequest.Merge(dst, src)
}
func (m *GetQueueSizesRequest) XXX_Size() int {
	return xxx_messageInfo_GetQueueSizesRequest.Size(m)
}
func (m *GetQueueSizesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetQueueSizesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetQueueSizesRequest proto.InternalMessageInfo

type GetQueueSizesResponse struct {
	EventToQueueInfo     map[string]*GetQueueSizesResponse_QueueInfo `protobuf:"bytes,2,rep,name=event_to_queue_info,json=eventToQueueInfo,proto3" json:"event_to_queue_info,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *GetQueueSizesResponse) Reset()         { *m = GetQueueSizesResponse{} }
func (m *GetQueueSizesResponse) String() string { return proto.CompactTextString(m) }
func (*GetQueueSizesResponse) ProtoMessage()    {}
func (*GetQueueSizesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_service_dce147a8cf8cf5fc, []int{11}
}
func (m *GetQueueSizesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetQueueSizesResponse.Unmarshal(m, b)
}
func (m *GetQueueSizesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetQueueSizesResponse.Marshal(b, m, deterministic)
}
func (dst *GetQueueSizesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetQueueSizesResponse.Merge(dst, src)
}
func (m *GetQueueSizesResponse) XXX_Size() int {
	return xxx_messageInfo_GetQueueSizesResponse.Size(m)
}
func (m *GetQueueSizesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetQueueSizesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetQueueSizesResponse proto.InternalMessageInfo

func (m *GetQueueSizesResponse) GetEventToQueueInfo() map[string]*GetQueueSizesResponse_QueueInfo {
	if m != nil {
		return m.EventToQueueInfo
	}
	return nil
}

type GetQueueSizesResponse_QueueInfo struct {
	QueueSizes           map[string]int64 `protobuf:"bytes,1,rep,name=queue_sizes,json=queueSizes,proto3" json:"queue_sizes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetQueueSizesResponse_QueueInfo) Reset()         { *m = GetQueueSizesResponse_QueueInfo{} }
func (m *GetQueueSizesResponse_QueueInfo) String() string { return proto.CompactTextString(m) }
func (*GetQueueSizesResponse_QueueInfo) ProtoMessage()    {}
func (*GetQueueSizesResponse_QueueInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_service_dce147a8cf8cf5fc, []int{11, 0}
}
func (m *GetQueueSizesResponse_QueueInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetQueueSizesResponse_QueueInfo.Unmarshal(m, b)
}
func (m *GetQueueSizesResponse_QueueInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetQueueSizesResponse_QueueInfo.Marshal(b, m, deterministic)
}
func (dst *GetQueueSizesResponse_QueueInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetQueueSizesResponse_QueueInfo.Merge(dst, src)
}
func (m *GetQueueSizesResponse_QueueInfo) XXX_Size() int {
	return xxx_messageInfo_GetQueueSizesResponse_QueueInfo.Size(m)
}
func (m *GetQueueSizesResponse_QueueInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_GetQueueSizesResponse_QueueInfo.DiscardUnknown(m)
}

var xxx_messageInfo_GetQueueSizesResponse_QueueInfo proto.InternalMessageInfo

func (m *GetQueueSizesResponse_QueueInfo) GetQueueSizes() map[string]int64 {
	if m != nil {
		return m.QueueSizes
	}
	return nil
}

type GetQueueProvidersRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetQueueProvidersRequest) Reset()         { *m = GetQueueProvidersRequest{} }
func (m *GetQueueProvidersRequest) String() string { return proto.CompactTextString(m) }
func (*GetQueueProvidersRequest) ProtoMessage()    {}
func (*GetQueueProvidersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_service_dce147a8cf8cf5fc, []int{12}
}
func (m *GetQueueProvidersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetQueueProvidersRequest.Unmarshal(m, b)
}
func (m *GetQueueProvidersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetQueueProvidersRequest.Marshal(b, m, deterministic)
}
func (dst *GetQueueProvidersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetQueueProvidersRequest.Merge(dst, src)
}
func (m *GetQueueProvidersRequest) XXX_Size() int {
	return xxx_messageInfo_GetQueueProvidersRequest.Size(m)
}
func (m *GetQueueProvidersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetQueueProvidersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetQueueProvidersRequest proto.InternalMessageInfo

type GetQueueProvidersResponse struct {
	Providers            []string `protobuf:"bytes,1,rep,name=providers,proto3" json:"providers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetQueueProvidersResponse) Reset()         { *m = GetQueueProvidersResponse{} }
func (m *GetQueueProvidersResponse) String() string { return proto.CompactTextString(m) }
func (*GetQueueProvidersResponse) ProtoMessage()    {}
func (*GetQueueProvidersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_service_dce147a8cf8cf5fc, []int{13}
}
func (m *GetQueueProvidersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetQueueProvidersResponse.Unmarshal(m, b)
}
func (m *GetQueueProvidersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetQueueProvidersResponse.Marshal(b, m, deterministic)
}
func (dst *GetQueueProvidersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetQueueProvidersResponse.Merge(dst, src)
}
func (m *GetQueueProvidersResponse) XXX_Size() int {
	return xxx_messageInfo_GetQueueProvidersResponse.Size(m)
}
func (m *GetQueueProvidersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetQueueProvidersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetQueueProvidersResponse proto.InternalMessageInfo

func (m *GetQueueProvidersResponse) GetProviders() []string {
	if m != nil {
		return m.Providers
	}
	return nil
}

func init() {
	proto.RegisterType((*AddEventHandlerRequest)(nil), "conductor.grpc.events.AddEventHandlerRequest")
	proto.RegisterType((*AddEventHandlerResponse)(nil), "conductor.grpc.events.AddEventHandlerResponse")
	proto.RegisterType((*UpdateEventHandlerRequest)(nil), "conductor.grpc.events.UpdateEventHandlerRequest")
	proto.RegisterType((*UpdateEventHandlerResponse)(nil), "conductor.grpc.events.UpdateEventHandlerResponse")
	proto.RegisterType((*RemoveEventHandlerRequest)(nil), "conductor.grpc.events.RemoveEventHandlerRequest")
	proto.RegisterType((*RemoveEventHandlerResponse)(nil), "conductor.grpc.events.RemoveEventHandlerResponse")
	proto.RegisterType((*GetEventHandlersRequest)(nil), "conductor.grpc.events.GetEventHandlersRequest")
	proto.RegisterType((*GetEventHandlersForEventRequest)(nil), "conductor.grpc.events.GetEventHandlersForEventRequest")
	proto.RegisterType((*GetQueuesRequest)(nil), "conductor.grpc.events.GetQueuesRequest")
	proto.RegisterType((*GetQueuesResponse)(nil), "conductor.grpc.events.GetQueuesResponse")
	proto.RegisterMapType((map[string]string)(nil), "conductor.grpc.events.GetQueuesResponse.EventToQueueUriEntry")
	proto.RegisterType((*GetQueueSizesRequest)(nil), "conductor.grpc.events.GetQueueSizesRequest")
	proto.RegisterType((*GetQueueSizesResponse)(nil), "conductor.grpc.events.GetQueueSizesResponse")
	proto.RegisterMapType((map[string]*GetQueueSizesResponse_QueueInfo)(nil), "conductor.grpc.events.GetQueueSizesResponse.EventToQueueInfoEntry")
	proto.RegisterType((*GetQueueSizesResponse_QueueInfo)(nil), "conductor.grpc.events.GetQueueSizesResponse.QueueInfo")
	proto.RegisterMapType((map[string]int64)(nil), "conductor.grpc.events.GetQueueSizesResponse.QueueInfo.QueueSizesEntry")
	proto.RegisterType((*GetQueueProvidersRequest)(nil), "conductor.grpc.events.GetQueueProvidersRequest")
	proto.RegisterType((*GetQueueProvidersResponse)(nil), "conductor.grpc.events.GetQueueProvidersResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventServiceClient is the client API for EventService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventServiceClient interface {
	// POST /
	AddEventHandler(ctx context.Context, in *AddEventHandlerRequest, opts ...grpc.CallOption) (*AddEventHandlerResponse, error)
	// PUT /
	UpdateEventHandler(ctx context.Context, in *UpdateEventHandlerRequest, opts ...grpc.CallOption) (*UpdateEventHandlerResponse, error)
	// DELETE /{name}
	RemoveEventHandler(ctx context.Context, in *RemoveEventHandlerRequest, opts ...grpc.CallOption) (*RemoveEventHandlerResponse, error)
	// GET /
	GetEventHandlers(ctx context.Context, in *GetEventHandlersRequest, opts ...grpc.CallOption) (EventService_GetEventHandlersClient, error)
	// GET /{name}
	GetEventHandlersForEvent(ctx context.Context, in *GetEventHandlersForEventRequest, opts ...grpc.CallOption) (EventService_GetEventHandlersForEventClient, error)
	// GET /queues
	GetQueues(ctx context.Context, in *GetQueuesRequest, opts ...grpc.CallOption) (*GetQueuesResponse, error)
	GetQueueSizes(ctx context.Context, in *GetQueueSizesRequest, opts ...grpc.CallOption) (*GetQueueSizesResponse, error)
	// GET /queues/providers
	GetQueueProviders(ctx context.Context, in *GetQueueProvidersRequest, opts ...grpc.CallOption) (*GetQueueProvidersResponse, error)
}

type eventServiceClient struct {
	cc *grpc.ClientConn
}

func NewEventServiceClient(cc *grpc.ClientConn) EventServiceClient {
	return &eventServiceClient{cc}
}

func (c *eventServiceClient) AddEventHandler(ctx context.Context, in *AddEventHandlerRequest, opts ...grpc.CallOption) (*AddEventHandlerResponse, error) {
	out := new(AddEventHandlerResponse)
	err := c.cc.Invoke(ctx, "/conductor.grpc.events.EventService/AddEventHandler", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) UpdateEventHandler(ctx context.Context, in *UpdateEventHandlerRequest, opts ...grpc.CallOption) (*UpdateEventHandlerResponse, error) {
	out := new(UpdateEventHandlerResponse)
	err := c.cc.Invoke(ctx, "/conductor.grpc.events.EventService/UpdateEventHandler", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) RemoveEventHandler(ctx context.Context, in *RemoveEventHandlerRequest, opts ...grpc.CallOption) (*RemoveEventHandlerResponse, error) {
	out := new(RemoveEventHandlerResponse)
	err := c.cc.Invoke(ctx, "/conductor.grpc.events.EventService/RemoveEventHandler", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) GetEventHandlers(ctx context.Context, in *GetEventHandlersRequest, opts ...grpc.CallOption) (EventService_GetEventHandlersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EventService_serviceDesc.Streams[0], "/conductor.grpc.events.EventService/GetEventHandlers", opts...)
	if err != nil {
		return nil, err
	}
	x := &eventServiceGetEventHandlersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type EventService_GetEventHandlersClient interface {
	Recv() (*model.EventHandler, error)
	grpc.ClientStream
}

type eventServiceGetEventHandlersClient struct {
	grpc.ClientStream
}

func (x *eventServiceGetEventHandlersClient) Recv() (*model.EventHandler, error) {
	m := new(model.EventHandler)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *eventServiceClient) GetEventHandlersForEvent(ctx context.Context, in *GetEventHandlersForEventRequest, opts ...grpc.CallOption) (EventService_GetEventHandlersForEventClient, error) {
	stream, err := c.cc.NewStream(ctx, &_EventService_serviceDesc.Streams[1], "/conductor.grpc.events.EventService/GetEventHandlersForEvent", opts...)
	if err != nil {
		return nil, err
	}
	x := &eventServiceGetEventHandlersForEventClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type EventService_GetEventHandlersForEventClient interface {
	Recv() (*model.EventHandler, error)
	grpc.ClientStream
}

type eventServiceGetEventHandlersForEventClient struct {
	grpc.ClientStream
}

func (x *eventServiceGetEventHandlersForEventClient) Recv() (*model.EventHandler, error) {
	m := new(model.EventHandler)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *eventServiceClient) GetQueues(ctx context.Context, in *GetQueuesRequest, opts ...grpc.CallOption) (*GetQueuesResponse, error) {
	out := new(GetQueuesResponse)
	err := c.cc.Invoke(ctx, "/conductor.grpc.events.EventService/GetQueues", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) GetQueueSizes(ctx context.Context, in *GetQueueSizesRequest, opts ...grpc.CallOption) (*GetQueueSizesResponse, error) {
	out := new(GetQueueSizesResponse)
	err := c.cc.Invoke(ctx, "/conductor.grpc.events.EventService/GetQueueSizes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *eventServiceClient) GetQueueProviders(ctx context.Context, in *GetQueueProvidersRequest, opts ...grpc.CallOption) (*GetQueueProvidersResponse, error) {
	out := new(GetQueueProvidersResponse)
	err := c.cc.Invoke(ctx, "/conductor.grpc.events.EventService/GetQueueProviders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventServiceServer is the server API for EventService service.
type EventServiceServer interface {
	// POST /
	AddEventHandler(context.Context, *AddEventHandlerRequest) (*AddEventHandlerResponse, error)
	// PUT /
	UpdateEventHandler(context.Context, *UpdateEventHandlerRequest) (*UpdateEventHandlerResponse, error)
	// DELETE /{name}
	RemoveEventHandler(context.Context, *RemoveEventHandlerRequest) (*RemoveEventHandlerResponse, error)
	// GET /
	GetEventHandlers(*GetEventHandlersRequest, EventService_GetEventHandlersServer) error
	// GET /{name}
	GetEventHandlersForEvent(*GetEventHandlersForEventRequest, EventService_GetEventHandlersForEventServer) error
	// GET /queues
	GetQueues(context.Context, *GetQueuesRequest) (*GetQueuesResponse, error)
	GetQueueSizes(context.Context, *GetQueueSizesRequest) (*GetQueueSizesResponse, error)
	// GET /queues/providers
	GetQueueProviders(context.Context, *GetQueueProvidersRequest) (*GetQueueProvidersResponse, error)
}

func RegisterEventServiceServer(s *grpc.Server, srv EventServiceServer) {
	s.RegisterService(&_EventService_serviceDesc, srv)
}

func _EventService_AddEventHandler_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddEventHandlerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).AddEventHandler(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.grpc.events.EventService/AddEventHandler",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).AddEventHandler(ctx, req.(*AddEventHandlerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_UpdateEventHandler_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateEventHandlerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).UpdateEventHandler(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.grpc.events.EventService/UpdateEventHandler",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).UpdateEventHandler(ctx, req.(*UpdateEventHandlerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_RemoveEventHandler_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveEventHandlerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).RemoveEventHandler(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.grpc.events.EventService/RemoveEventHandler",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).RemoveEventHandler(ctx, req.(*RemoveEventHandlerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_GetEventHandlers_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetEventHandlersRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EventServiceServer).GetEventHandlers(m, &eventServiceGetEventHandlersServer{stream})
}

type EventService_GetEventHandlersServer interface {
	Send(*model.EventHandler) error
	grpc.ServerStream
}

type eventServiceGetEventHandlersServer struct {
	grpc.ServerStream
}

func (x *eventServiceGetEventHandlersServer) Send(m *model.EventHandler) error {
	return x.ServerStream.SendMsg(m)
}

func _EventService_GetEventHandlersForEvent_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetEventHandlersForEventRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(EventServiceServer).GetEventHandlersForEvent(m, &eventServiceGetEventHandlersForEventServer{stream})
}

type EventService_GetEventHandlersForEventServer interface {
	Send(*model.EventHandler) error
	grpc.ServerStream
}

type eventServiceGetEventHandlersForEventServer struct {
	grpc.ServerStream
}

func (x *eventServiceGetEventHandlersForEventServer) Send(m *model.EventHandler) error {
	return x.ServerStream.SendMsg(m)
}

func _EventService_GetQueues_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetQueuesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).GetQueues(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.grpc.events.EventService/GetQueues",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).GetQueues(ctx, req.(*GetQueuesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_GetQueueSizes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetQueueSizesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).GetQueueSizes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.grpc.events.EventService/GetQueueSizes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).GetQueueSizes(ctx, req.(*GetQueueSizesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _EventService_GetQueueProviders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetQueueProvidersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventServiceServer).GetQueueProviders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.grpc.events.EventService/GetQueueProviders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventServiceServer).GetQueueProviders(ctx, req.(*GetQueueProvidersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _EventService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "conductor.grpc.events.EventService",
	HandlerType: (*EventServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddEventHandler",
			Handler:    _EventService_AddEventHandler_Handler,
		},
		{
			MethodName: "UpdateEventHandler",
			Handler:    _EventService_UpdateEventHandler_Handler,
		},
		{
			MethodName: "RemoveEventHandler",
			Handler:    _EventService_RemoveEventHandler_Handler,
		},
		{
			MethodName: "GetQueues",
			Handler:    _EventService_GetQueues_Handler,
		},
		{
			MethodName: "GetQueueSizes",
			Handler:    _EventService_GetQueueSizes_Handler,
		},
		{
			MethodName: "GetQueueProviders",
			Handler:    _EventService_GetQueueProviders_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetEventHandlers",
			Handler:       _EventService_GetEventHandlers_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetEventHandlersForEvent",
			Handler:       _EventService_GetEventHandlersForEvent_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "grpc/event_service.proto",
}

func init() {
	proto.RegisterFile("grpc/event_service.proto", fileDescriptor_event_service_dce147a8cf8cf5fc)
}

var fileDescriptor_event_service_dce147a8cf8cf5fc = []byte{
	// 694 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x5b, 0x6f, 0xd3, 0x3c,
	0x18, 0x56, 0xd6, 0xef, 0x63, 0xf4, 0x2d, 0xb0, 0x61, 0x76, 0x48, 0xa3, 0xa1, 0x4d, 0xbd, 0xa1,
	0x12, 0xe0, 0x8c, 0x4e, 0x1a, 0x07, 0x69, 0x17, 0x54, 0xda, 0x06, 0x12, 0x12, 0x5b, 0xb6, 0x49,
	0x88, 0x0b, 0xaa, 0x2c, 0xf1, 0xba, 0x8c, 0xd4, 0x6e, 0x13, 0x27, 0xa2, 0xf0, 0x37, 0xf8, 0x27,
	0x5c, 0x73, 0xc5, 0x1f, 0x43, 0xb1, 0xd3, 0x9c, 0x9a, 0xd0, 0x16, 0x71, 0x57, 0xbf, 0x87, 0xe7,
	0xf1, 0x63, 0xfb, 0x7d, 0x1a, 0x50, 0xfb, 0xde, 0xd0, 0xd2, 0x49, 0x48, 0x28, 0xef, 0xf9, 0xc4,
	0x0b, 0x1d, 0x8b, 0xe0, 0xa1, 0xc7, 0x38, 0x43, 0xeb, 0x16, 0xa3, 0x76, 0x60, 0x71, 0xe6, 0xe1,
	0xa8, 0x06, 0x8b, 0x1a, 0x5f, 0x53, 0x07, 0xcc, 0x26, 0xae, 0xec, 0xb8, 0x36, 0xa9, 0xed, 0x12,
	0x4f, 0x36, 0xb4, 0x4e, 0x61, 0xe3, 0xb5, 0x6d, 0x1f, 0x46, 0x89, 0x37, 0x32, 0x61, 0x90, 0x51,
	0x40, 0x7c, 0x8e, 0x9e, 0xc3, 0x72, 0x5c, 0xaa, 0x2a, 0x3b, 0x4a, 0xbb, 0xd1, 0x79, 0x88, 0x53,
	0x70, 0xd1, 0x8c, 0x73, 0x6d, 0x93, 0xea, 0x56, 0x13, 0x36, 0xa7, 0x20, 0xfd, 0x21, 0xa3, 0x3e,
	0x69, 0x9d, 0x43, 0xf3, 0x62, 0x68, 0x9b, 0x9c, 0xfc, 0x53, 0xc2, 0x2d, 0xd0, 0xca, 0x50, 0x63,
	0x4e, 0x1d, 0x9a, 0x06, 0x19, 0xb0, 0xb0, 0x94, 0x13, 0xc1, 0x7f, 0xd4, 0x1c, 0x10, 0x41, 0x58,
	0x37, 0xc4, 0xef, 0x08, 0xae, 0xac, 0x21, 0x86, 0x6b, 0xc2, 0xe6, 0x31, 0xe1, 0xd9, 0x94, 0x1f,
	0x83, 0xb5, 0x3e, 0xc0, 0x76, 0x31, 0x75, 0xc4, 0x3c, 0xb1, 0x9e, 0xf0, 0xad, 0xc1, 0xff, 0xe2,
	0x12, 0x62, 0x42, 0xb9, 0x40, 0xdb, 0xd0, 0x30, 0x2d, 0xee, 0x84, 0xa4, 0xc7, 0xa8, 0x3b, 0x56,
	0x97, 0x76, 0x94, 0xf6, 0x6d, 0x03, 0x64, 0xe8, 0x3d, 0x75, 0xc7, 0x2d, 0x04, 0xab, 0xc7, 0x84,
	0x9f, 0x06, 0x24, 0x20, 0x09, 0xdb, 0x2f, 0x05, 0xee, 0x67, 0x82, 0x72, 0x7b, 0xe8, 0x06, 0x90,
	0x7c, 0x17, 0x9c, 0xf5, 0x46, 0x51, 0xaa, 0x17, 0x78, 0x8e, 0xaa, 0xec, 0xd4, 0xda, 0x8d, 0xce,
	0x01, 0x2e, 0x7d, 0x1d, 0x78, 0x0a, 0x45, 0x9e, 0xf3, 0x39, 0x13, 0xd1, 0x0b, 0xcf, 0x39, 0xa4,
	0xdc, 0x1b, 0x1b, 0x2b, 0x24, 0x1f, 0xd5, 0xba, 0xb0, 0x56, 0x56, 0x88, 0x56, 0xa1, 0xf6, 0x99,
	0x8c, 0x63, 0x89, 0xd1, 0xcf, 0x48, 0x76, 0x68, 0xba, 0x01, 0x11, 0xd2, 0xea, 0x86, 0x5c, 0xbc,
	0x5a, 0x7a, 0xa1, 0xb4, 0x36, 0x60, 0x6d, 0x42, 0x7f, 0xe6, 0x7c, 0x4d, 0xd5, 0xfd, 0xac, 0xc1,
	0x7a, 0x21, 0x11, 0x2b, 0x1c, 0xc1, 0x83, 0x82, 0x42, 0x87, 0x5e, 0x31, 0x75, 0x49, 0x48, 0xec,
	0xce, 0x90, 0x98, 0x83, 0xca, 0xc9, 0x7c, 0x4b, 0xaf, 0x98, 0xd4, 0xb9, 0x4a, 0x0a, 0x61, 0xed,
	0x87, 0x02, 0xf5, 0x64, 0x85, 0xfa, 0xd0, 0x90, 0xbc, 0x7e, 0x04, 0x16, 0x9f, 0xed, 0xd1, 0x42,
	0xc4, 0x09, 0x18, 0x4e, 0x93, 0x92, 0x1c, 0x46, 0x49, 0x40, 0x3b, 0x80, 0x95, 0x42, 0x7a, 0xd6,
	0xd1, 0xd6, 0x32, 0x47, 0xab, 0x7d, 0x83, 0xf5, 0x52, 0x81, 0x25, 0x20, 0xef, 0xb2, 0x20, 0x8d,
	0xce, 0xfe, 0xdf, 0x89, 0xc9, 0xde, 0xab, 0x06, 0xea, 0xa4, 0xfa, 0xc4, 0x63, 0xa1, 0x63, 0x67,
	0xe6, 0xe4, 0x25, 0x34, 0x4b, 0x72, 0xf1, 0xf5, 0x6e, 0x41, 0x7d, 0x38, 0x09, 0x8a, 0xb3, 0xad,
	0x1b, 0x69, 0xa0, 0xf3, 0x7d, 0x19, 0xee, 0x08, 0x51, 0x67, 0xd2, 0xf6, 0xd0, 0x10, 0x56, 0x0a,
	0x66, 0x83, 0x9e, 0x56, 0xec, 0xbe, 0xdc, 0xe7, 0x34, 0x3c, 0x6f, 0x79, 0xbc, 0xc1, 0x31, 0xa0,
	0x69, 0xb7, 0x41, 0xbb, 0x15, 0x28, 0x95, 0x76, 0xa7, 0x3d, 0x5b, 0xa0, 0x23, 0xa5, 0x9e, 0x76,
	0xa6, 0x4a, 0xea, 0x4a, 0xd7, 0xab, 0xa4, 0xae, 0xb6, 0x3d, 0x64, 0x09, 0x07, 0xca, 0x79, 0x1b,
	0xc2, 0xd5, 0xcf, 0xa4, 0xcc, 0x1f, 0xb5, 0x3f, 0xfb, 0xf9, 0xae, 0x82, 0x7c, 0xf1, 0x68, 0x4a,
	0x0d, 0x14, 0xed, 0xcf, 0x49, 0x56, 0x70, 0xdc, 0xd9, 0xa4, 0x9f, 0xa0, 0x9e, 0x18, 0x20, 0x7a,
	0x34, 0xdb, 0x22, 0x25, 0x6c, 0x7b, 0x5e, 0x2f, 0x45, 0x37, 0x70, 0x37, 0x37, 0x37, 0xe8, 0xf1,
	0x7c, 0xd3, 0x25, 0x79, 0x9e, 0x2c, 0x32, 0x8a, 0x28, 0x4c, 0xff, 0x12, 0x92, 0xc9, 0x42, 0xfa,
	0x0c, 0x88, 0xe2, 0x7c, 0x6a, 0xbb, 0xf3, 0x37, 0x48, 0xde, 0x2e, 0x07, 0xcd, 0x62, 0x03, 0x4c,
	0x09, 0xbf, 0x72, 0x9d, 0x2f, 0x85, 0xf6, 0xee, 0xbd, 0xec, 0xc4, 0x9e, 0x5c, 0x7e, 0x3c, 0xea,
	0x3b, 0xfc, 0x3a, 0xb8, 0xc4, 0x16, 0x1b, 0xe8, 0x03, 0xd3, 0xe2, 0x66, 0xbf, 0x6f, 0x7a, 0x5c,
	0x4f, 0xba, 0x74, 0xcb, 0x75, 0x08, 0xe5, 0x7a, 0x9f, 0x89, 0xef, 0x9c, 0x70, 0x2f, 0x93, 0x4a,
	0xbf, 0x7c, 0xfc, 0xcb, 0x5b, 0xe2, 0x3e, 0xf7, 0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0x85, 0x57,
	0xf7, 0x11, 0x0f, 0x09, 0x00, 0x00,
}
