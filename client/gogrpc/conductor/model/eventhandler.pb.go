// Code generated by protoc-gen-go. DO NOT EDIT.
// source: model/eventhandler.proto

package model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	_struct "github.com/golang/protobuf/ptypes/struct"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EventHandler_Action_Type int32

const (
	EventHandler_Action_START_WORKFLOW EventHandler_Action_Type = 0
	EventHandler_Action_COMPLETE_TASK  EventHandler_Action_Type = 1
	EventHandler_Action_FAIL_TASK      EventHandler_Action_Type = 2
)

var EventHandler_Action_Type_name = map[int32]string{
	0: "START_WORKFLOW",
	1: "COMPLETE_TASK",
	2: "FAIL_TASK",
}

var EventHandler_Action_Type_value = map[string]int32{
	"START_WORKFLOW": 0,
	"COMPLETE_TASK":  1,
	"FAIL_TASK":      2,
}

func (x EventHandler_Action_Type) String() string {
	return proto.EnumName(EventHandler_Action_Type_name, int32(x))
}

func (EventHandler_Action_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_25b7eb00cbb0ef13, []int{0, 2, 0}
}

type EventHandler struct {
	Name                 string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Event                string                 `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	Condition            string                 `protobuf:"bytes,3,opt,name=condition,proto3" json:"condition,omitempty"`
	Actions              []*EventHandler_Action `protobuf:"bytes,4,rep,name=actions,proto3" json:"actions,omitempty"`
	Active               bool                   `protobuf:"varint,5,opt,name=active,proto3" json:"active,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *EventHandler) Reset()         { *m = EventHandler{} }
func (m *EventHandler) String() string { return proto.CompactTextString(m) }
func (*EventHandler) ProtoMessage()    {}
func (*EventHandler) Descriptor() ([]byte, []int) {
	return fileDescriptor_25b7eb00cbb0ef13, []int{0}
}

func (m *EventHandler) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventHandler.Unmarshal(m, b)
}
func (m *EventHandler) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventHandler.Marshal(b, m, deterministic)
}
func (m *EventHandler) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventHandler.Merge(m, src)
}
func (m *EventHandler) XXX_Size() int {
	return xxx_messageInfo_EventHandler.Size(m)
}
func (m *EventHandler) XXX_DiscardUnknown() {
	xxx_messageInfo_EventHandler.DiscardUnknown(m)
}

var xxx_messageInfo_EventHandler proto.InternalMessageInfo

func (m *EventHandler) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EventHandler) GetEvent() string {
	if m != nil {
		return m.Event
	}
	return ""
}

func (m *EventHandler) GetCondition() string {
	if m != nil {
		return m.Condition
	}
	return ""
}

func (m *EventHandler) GetActions() []*EventHandler_Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *EventHandler) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

type EventHandler_StartWorkflow struct {
	Name                 string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version              int32                     `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	CorrelationId        string                    `protobuf:"bytes,3,opt,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	Input                map[string]*_struct.Value `protobuf:"bytes,4,rep,name=input,proto3" json:"input,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	InputMessage         *any.Any                  `protobuf:"bytes,5,opt,name=input_message,json=inputMessage,proto3" json:"input_message,omitempty"`
	TaskToDomain         map[string]string         `protobuf:"bytes,6,rep,name=task_to_domain,json=taskToDomain,proto3" json:"task_to_domain,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *EventHandler_StartWorkflow) Reset()         { *m = EventHandler_StartWorkflow{} }
func (m *EventHandler_StartWorkflow) String() string { return proto.CompactTextString(m) }
func (*EventHandler_StartWorkflow) ProtoMessage()    {}
func (*EventHandler_StartWorkflow) Descriptor() ([]byte, []int) {
	return fileDescriptor_25b7eb00cbb0ef13, []int{0, 0}
}

func (m *EventHandler_StartWorkflow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventHandler_StartWorkflow.Unmarshal(m, b)
}
func (m *EventHandler_StartWorkflow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventHandler_StartWorkflow.Marshal(b, m, deterministic)
}
func (m *EventHandler_StartWorkflow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventHandler_StartWorkflow.Merge(m, src)
}
func (m *EventHandler_StartWorkflow) XXX_Size() int {
	return xxx_messageInfo_EventHandler_StartWorkflow.Size(m)
}
func (m *EventHandler_StartWorkflow) XXX_DiscardUnknown() {
	xxx_messageInfo_EventHandler_StartWorkflow.DiscardUnknown(m)
}

var xxx_messageInfo_EventHandler_StartWorkflow proto.InternalMessageInfo

func (m *EventHandler_StartWorkflow) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EventHandler_StartWorkflow) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *EventHandler_StartWorkflow) GetCorrelationId() string {
	if m != nil {
		return m.CorrelationId
	}
	return ""
}

func (m *EventHandler_StartWorkflow) GetInput() map[string]*_struct.Value {
	if m != nil {
		return m.Input
	}
	return nil
}

func (m *EventHandler_StartWorkflow) GetInputMessage() *any.Any {
	if m != nil {
		return m.InputMessage
	}
	return nil
}

func (m *EventHandler_StartWorkflow) GetTaskToDomain() map[string]string {
	if m != nil {
		return m.TaskToDomain
	}
	return nil
}

type EventHandler_TaskDetails struct {
	WorkflowId           string                    `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	TaskRefName          string                    `protobuf:"bytes,2,opt,name=task_ref_name,json=taskRefName,proto3" json:"task_ref_name,omitempty"`
	Output               map[string]*_struct.Value `protobuf:"bytes,3,rep,name=output,proto3" json:"output,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	OutputMessage        *any.Any                  `protobuf:"bytes,4,opt,name=output_message,json=outputMessage,proto3" json:"output_message,omitempty"`
	TaskId               string                    `protobuf:"bytes,5,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *EventHandler_TaskDetails) Reset()         { *m = EventHandler_TaskDetails{} }
func (m *EventHandler_TaskDetails) String() string { return proto.CompactTextString(m) }
func (*EventHandler_TaskDetails) ProtoMessage()    {}
func (*EventHandler_TaskDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor_25b7eb00cbb0ef13, []int{0, 1}
}

func (m *EventHandler_TaskDetails) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventHandler_TaskDetails.Unmarshal(m, b)
}
func (m *EventHandler_TaskDetails) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventHandler_TaskDetails.Marshal(b, m, deterministic)
}
func (m *EventHandler_TaskDetails) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventHandler_TaskDetails.Merge(m, src)
}
func (m *EventHandler_TaskDetails) XXX_Size() int {
	return xxx_messageInfo_EventHandler_TaskDetails.Size(m)
}
func (m *EventHandler_TaskDetails) XXX_DiscardUnknown() {
	xxx_messageInfo_EventHandler_TaskDetails.DiscardUnknown(m)
}

var xxx_messageInfo_EventHandler_TaskDetails proto.InternalMessageInfo

func (m *EventHandler_TaskDetails) GetWorkflowId() string {
	if m != nil {
		return m.WorkflowId
	}
	return ""
}

func (m *EventHandler_TaskDetails) GetTaskRefName() string {
	if m != nil {
		return m.TaskRefName
	}
	return ""
}

func (m *EventHandler_TaskDetails) GetOutput() map[string]*_struct.Value {
	if m != nil {
		return m.Output
	}
	return nil
}

func (m *EventHandler_TaskDetails) GetOutputMessage() *any.Any {
	if m != nil {
		return m.OutputMessage
	}
	return nil
}

func (m *EventHandler_TaskDetails) GetTaskId() string {
	if m != nil {
		return m.TaskId
	}
	return ""
}

type EventHandler_Action struct {
	Action               EventHandler_Action_Type    `protobuf:"varint,1,opt,name=action,proto3,enum=conductor.proto.EventHandler_Action_Type" json:"action,omitempty"`
	StartWorkflow        *EventHandler_StartWorkflow `protobuf:"bytes,2,opt,name=start_workflow,json=startWorkflow,proto3" json:"start_workflow,omitempty"`
	CompleteTask         *EventHandler_TaskDetails   `protobuf:"bytes,3,opt,name=complete_task,json=completeTask,proto3" json:"complete_task,omitempty"`
	FailTask             *EventHandler_TaskDetails   `protobuf:"bytes,4,opt,name=fail_task,json=failTask,proto3" json:"fail_task,omitempty"`
	ExpandInlineJson     bool                        `protobuf:"varint,5,opt,name=expand_inline_json,json=expandInlineJson,proto3" json:"expand_inline_json,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *EventHandler_Action) Reset()         { *m = EventHandler_Action{} }
func (m *EventHandler_Action) String() string { return proto.CompactTextString(m) }
func (*EventHandler_Action) ProtoMessage()    {}
func (*EventHandler_Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_25b7eb00cbb0ef13, []int{0, 2}
}

func (m *EventHandler_Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventHandler_Action.Unmarshal(m, b)
}
func (m *EventHandler_Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventHandler_Action.Marshal(b, m, deterministic)
}
func (m *EventHandler_Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventHandler_Action.Merge(m, src)
}
func (m *EventHandler_Action) XXX_Size() int {
	return xxx_messageInfo_EventHandler_Action.Size(m)
}
func (m *EventHandler_Action) XXX_DiscardUnknown() {
	xxx_messageInfo_EventHandler_Action.DiscardUnknown(m)
}

var xxx_messageInfo_EventHandler_Action proto.InternalMessageInfo

func (m *EventHandler_Action) GetAction() EventHandler_Action_Type {
	if m != nil {
		return m.Action
	}
	return EventHandler_Action_START_WORKFLOW
}

func (m *EventHandler_Action) GetStartWorkflow() *EventHandler_StartWorkflow {
	if m != nil {
		return m.StartWorkflow
	}
	return nil
}

func (m *EventHandler_Action) GetCompleteTask() *EventHandler_TaskDetails {
	if m != nil {
		return m.CompleteTask
	}
	return nil
}

func (m *EventHandler_Action) GetFailTask() *EventHandler_TaskDetails {
	if m != nil {
		return m.FailTask
	}
	return nil
}

func (m *EventHandler_Action) GetExpandInlineJson() bool {
	if m != nil {
		return m.ExpandInlineJson
	}
	return false
}

func init() {
	proto.RegisterEnum("conductor.proto.EventHandler_Action_Type", EventHandler_Action_Type_name, EventHandler_Action_Type_value)
	proto.RegisterType((*EventHandler)(nil), "conductor.proto.EventHandler")
	proto.RegisterType((*EventHandler_StartWorkflow)(nil), "conductor.proto.EventHandler.StartWorkflow")
	proto.RegisterMapType((map[string]*_struct.Value)(nil), "conductor.proto.EventHandler.StartWorkflow.InputEntry")
	proto.RegisterMapType((map[string]string)(nil), "conductor.proto.EventHandler.StartWorkflow.TaskToDomainEntry")
	proto.RegisterType((*EventHandler_TaskDetails)(nil), "conductor.proto.EventHandler.TaskDetails")
	proto.RegisterMapType((map[string]*_struct.Value)(nil), "conductor.proto.EventHandler.TaskDetails.OutputEntry")
	proto.RegisterType((*EventHandler_Action)(nil), "conductor.proto.EventHandler.Action")
}

func init() { proto.RegisterFile("model/eventhandler.proto", fileDescriptor_25b7eb00cbb0ef13) }

var fileDescriptor_25b7eb00cbb0ef13 = []byte{
	// 734 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x95, 0xeb, 0x4e, 0xdb, 0x48,
	0x14, 0xc7, 0x37, 0x57, 0xc8, 0x71, 0x9c, 0x0d, 0x23, 0xc4, 0x7a, 0xb3, 0x48, 0x8b, 0xd0, 0xae,
	0xc4, 0x6a, 0x91, 0x23, 0xa5, 0x6a, 0xd5, 0x1b, 0xad, 0x42, 0x09, 0x6a, 0x4a, 0x20, 0x74, 0x88,
	0x8a, 0xd4, 0x2f, 0xd6, 0xc4, 0x9e, 0x18, 0x37, 0xf6, 0x4c, 0x64, 0x4f, 0x02, 0x79, 0x84, 0x3e,
	0x47, 0xdf, 0xa6, 0xef, 0xd1, 0xf7, 0xa8, 0x66, 0xc6, 0x01, 0x73, 0x11, 0x2d, 0x52, 0xbf, 0x9d,
	0xcb, 0x9c, 0xff, 0xf9, 0xf9, 0x9c, 0x99, 0x04, 0xac, 0x88, 0x7b, 0x34, 0x6c, 0xd2, 0x19, 0x65,
	0xe2, 0x8c, 0x30, 0x2f, 0xa4, 0xb1, 0x3d, 0x89, 0xb9, 0xe0, 0xe8, 0x77, 0x97, 0x33, 0x6f, 0xea,
	0x0a, 0x9e, 0x06, 0x1a, 0xeb, 0x3e, 0xe7, 0x7e, 0x48, 0x9b, 0xca, 0x1b, 0x4e, 0x47, 0xcd, 0x44,
	0xc4, 0x53, 0x57, 0xa4, 0xd9, 0x3f, 0x6f, 0x66, 0x09, 0x9b, 0xeb, 0xd4, 0xe6, 0x67, 0x03, 0xaa,
	0x1d, 0xd9, 0xe0, 0xad, 0x6e, 0x80, 0x10, 0x14, 0x19, 0x89, 0xa8, 0x95, 0xdb, 0xc8, 0x6d, 0x55,
	0xb0, 0xb2, 0xd1, 0x2a, 0x94, 0x14, 0x84, 0x95, 0x57, 0x41, 0xed, 0xa0, 0x75, 0xa8, 0x48, 0x8c,
	0x40, 0x04, 0x9c, 0x59, 0x05, 0x95, 0xb9, 0x0a, 0xa0, 0x57, 0xb0, 0x44, 0x5c, 0x69, 0x25, 0x56,
	0x71, 0xa3, 0xb0, 0x65, 0xb4, 0xfe, 0xb1, 0x6f, 0x40, 0xdb, 0xd9, 0xbe, 0x76, 0x5b, 0x1d, 0xc6,
	0x8b, 0x22, 0xb4, 0x06, 0x65, 0x69, 0xce, 0xa8, 0x55, 0xda, 0xc8, 0x6d, 0x2d, 0xe3, 0xd4, 0x6b,
	0x7c, 0x2b, 0x80, 0x79, 0x22, 0x48, 0x2c, 0x4e, 0x79, 0x3c, 0x1e, 0x85, 0xfc, 0xfc, 0x4e, 0x62,
	0x0b, 0x96, 0x66, 0x34, 0x4e, 0x24, 0x99, 0x64, 0x2e, 0xe1, 0x85, 0x8b, 0xfe, 0x85, 0x9a, 0xcb,
	0xe3, 0x98, 0x86, 0x44, 0xf6, 0x71, 0x02, 0x2f, 0x45, 0x37, 0x33, 0xd1, 0xae, 0x87, 0x7a, 0x50,
	0x0a, 0xd8, 0x64, 0x2a, 0x52, 0xf8, 0x27, 0xf7, 0xc3, 0x5f, 0x03, 0xb2, 0xbb, 0xb2, 0xb0, 0xc3,
	0x44, 0x3c, 0xc7, 0x5a, 0x04, 0x3d, 0x03, 0x53, 0x19, 0x4e, 0x44, 0x93, 0x84, 0xf8, 0xfa, 0x9b,
	0x8c, 0xd6, 0xaa, 0xad, 0x17, 0x63, 0x2f, 0x16, 0x63, 0xb7, 0xd9, 0x1c, 0x57, 0xd5, 0xd1, 0x43,
	0x7d, 0x12, 0xb9, 0x50, 0x13, 0x24, 0x19, 0x3b, 0x82, 0x3b, 0x1e, 0x8f, 0x48, 0xc0, 0xac, 0xb2,
	0x22, 0xda, 0x79, 0x08, 0xd1, 0x80, 0x24, 0xe3, 0x01, 0xdf, 0x53, 0xf5, 0x1a, 0xac, 0x2a, 0x32,
	0xa1, 0xc6, 0x31, 0xc0, 0x15, 0x34, 0xaa, 0x43, 0x61, 0x4c, 0xe7, 0xe9, 0x3c, 0xa5, 0x89, 0xb6,
	0xa1, 0x34, 0x23, 0xe1, 0x94, 0xaa, 0x61, 0x1a, 0xad, 0xb5, 0x5b, 0xdc, 0x1f, 0x64, 0x16, 0xeb,
	0x43, 0xcf, 0xf3, 0x4f, 0x73, 0x8d, 0xd7, 0xb0, 0x72, 0xab, 0xe9, 0x1d, 0xc2, 0xab, 0x59, 0xe1,
	0x4a, 0x56, 0xe0, 0x6b, 0x1e, 0x0c, 0xa9, 0xb0, 0x47, 0x05, 0x09, 0xc2, 0x04, 0xfd, 0x0d, 0xc6,
	0x79, 0xfa, 0x39, 0x72, 0x69, 0x5a, 0x03, 0x16, 0xa1, 0xae, 0x87, 0x36, 0xc1, 0x54, 0x83, 0x8a,
	0xe9, 0xc8, 0x51, 0xf7, 0x41, 0x4b, 0x1a, 0x32, 0x88, 0xe9, 0xe8, 0x48, 0x5e, 0x8b, 0x43, 0x28,
	0xf3, 0xa9, 0x90, 0x6b, 0x2d, 0xa8, 0x21, 0x3e, 0xbe, 0x7f, 0x88, 0x99, 0xfe, 0x76, 0x5f, 0xd5,
	0xe9, 0xe1, 0xa5, 0x22, 0xe8, 0x05, 0xd4, 0xb4, 0x75, 0xb9, 0xd7, 0xe2, 0x3d, 0x7b, 0x35, 0xf5,
	0xd9, 0xc5, 0x62, 0xff, 0x80, 0x25, 0xc5, 0x1b, 0x78, 0xea, 0x36, 0x54, 0x70, 0x59, 0xba, 0x5d,
	0xaf, 0xf1, 0x1e, 0x8c, 0x4c, 0xb3, 0x5f, 0xb2, 0x8d, 0x2f, 0x05, 0x28, 0xeb, 0x07, 0x86, 0xda,
	0xfa, 0x5d, 0x71, 0xa6, 0x14, 0x6b, 0xad, 0xff, 0x7e, 0xe6, 0x59, 0xda, 0x83, 0xf9, 0x84, 0xe2,
	0xb4, 0x10, 0x61, 0xa8, 0x25, 0xf2, 0x7a, 0x39, 0x8b, 0xe9, 0xa7, 0x20, 0xff, 0x3f, 0xe0, 0x4a,
	0x62, 0x33, 0xb9, 0xf6, 0x88, 0x8f, 0xc0, 0x74, 0x79, 0x34, 0x09, 0xa9, 0xa0, 0x8e, 0x9c, 0x83,
	0x7a, 0x95, 0xc6, 0x8f, 0xe8, 0x32, 0x0b, 0xc2, 0xd5, 0x45, 0xbd, 0x0c, 0xa2, 0x7d, 0xa8, 0x8c,
	0x48, 0x10, 0x6a, 0xad, 0xe2, 0x43, 0xb5, 0x96, 0x65, 0xad, 0xd2, 0xd9, 0x06, 0x44, 0x2f, 0x26,
	0x84, 0x79, 0x4e, 0xc0, 0xc2, 0x80, 0x51, 0xe7, 0x53, 0xc2, 0x59, 0xfa, 0x93, 0x54, 0xd7, 0x99,
	0xae, 0x4a, 0xbc, 0x4b, 0x38, 0xdb, 0x7c, 0x09, 0x45, 0x39, 0x29, 0x84, 0xa0, 0x76, 0x32, 0x68,
	0xe3, 0x81, 0x73, 0xda, 0xc7, 0x07, 0xfb, 0xbd, 0xfe, 0x69, 0xfd, 0x37, 0xb4, 0x02, 0xe6, 0x9b,
	0xfe, 0xe1, 0x71, 0xaf, 0x33, 0xe8, 0x38, 0x83, 0xf6, 0xc9, 0x41, 0x3d, 0x87, 0x4c, 0xa8, 0xec,
	0xb7, 0xbb, 0x3d, 0xed, 0xe6, 0x77, 0x43, 0xf8, 0xcb, 0xe5, 0x91, 0xcd, 0xa8, 0x18, 0x85, 0xc1,
	0xc5, 0x4d, 0xda, 0xdd, 0x5a, 0x16, 0xf7, 0x78, 0xf8, 0x71, 0xc7, 0x0f, 0xc4, 0xd9, 0x74, 0x68,
	0xbb, 0x3c, 0x6a, 0x46, 0xc4, 0x15, 0xc4, 0xf7, 0x49, 0x2c, 0x9a, 0x97, 0x65, 0x4d, 0x37, 0x0c,
	0x28, 0x13, 0x4d, 0x9f, 0xfb, 0xf1, 0xc4, 0xcd, 0xc4, 0xd5, 0xdf, 0xca, 0xb0, 0xac, 0x54, 0x1f,
	0x7d, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x15, 0x78, 0x9a, 0x12, 0x66, 0x06, 0x00, 0x00,
}
