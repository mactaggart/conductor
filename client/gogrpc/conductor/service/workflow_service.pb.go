// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service/workflow_service.proto

package service

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	model "github.com/netflix/conductor/client/gogrpc/conductor/model"
	service "github.com/netflix/conductor/client/gogrpc/conductor/service"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StartWorkflowResponse struct {
	WorkflowId           string   `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartWorkflowResponse) Reset()         { *m = StartWorkflowResponse{} }
func (m *StartWorkflowResponse) String() string { return proto.CompactTextString(m) }
func (*StartWorkflowResponse) ProtoMessage()    {}
func (*StartWorkflowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{0}
}

func (m *StartWorkflowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartWorkflowResponse.Unmarshal(m, b)
}
func (m *StartWorkflowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartWorkflowResponse.Marshal(b, m, deterministic)
}
func (m *StartWorkflowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartWorkflowResponse.Merge(m, src)
}
func (m *StartWorkflowResponse) XXX_Size() int {
	return xxx_messageInfo_StartWorkflowResponse.Size(m)
}
func (m *StartWorkflowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartWorkflowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartWorkflowResponse proto.InternalMessageInfo

func (m *StartWorkflowResponse) GetWorkflowId() string {
	if m != nil {
		return m.WorkflowId
	}
	return ""
}

type GetWorkflowsRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	CorrelationId        []string `protobuf:"bytes,2,rep,name=correlation_id,json=correlationId,proto3" json:"correlation_id,omitempty"`
	IncludeClosed        bool     `protobuf:"varint,3,opt,name=include_closed,json=includeClosed,proto3" json:"include_closed,omitempty"`
	IncludeTasks         bool     `protobuf:"varint,4,opt,name=include_tasks,json=includeTasks,proto3" json:"include_tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWorkflowsRequest) Reset()         { *m = GetWorkflowsRequest{} }
func (m *GetWorkflowsRequest) String() string { return proto.CompactTextString(m) }
func (*GetWorkflowsRequest) ProtoMessage()    {}
func (*GetWorkflowsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{1}
}

func (m *GetWorkflowsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWorkflowsRequest.Unmarshal(m, b)
}
func (m *GetWorkflowsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWorkflowsRequest.Marshal(b, m, deterministic)
}
func (m *GetWorkflowsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWorkflowsRequest.Merge(m, src)
}
func (m *GetWorkflowsRequest) XXX_Size() int {
	return xxx_messageInfo_GetWorkflowsRequest.Size(m)
}
func (m *GetWorkflowsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWorkflowsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWorkflowsRequest proto.InternalMessageInfo

func (m *GetWorkflowsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetWorkflowsRequest) GetCorrelationId() []string {
	if m != nil {
		return m.CorrelationId
	}
	return nil
}

func (m *GetWorkflowsRequest) GetIncludeClosed() bool {
	if m != nil {
		return m.IncludeClosed
	}
	return false
}

func (m *GetWorkflowsRequest) GetIncludeTasks() bool {
	if m != nil {
		return m.IncludeTasks
	}
	return false
}

type GetWorkflowsResponse struct {
	WorkflowsById        map[string]*GetWorkflowsResponse_Workflows `protobuf:"bytes,1,rep,name=workflows_by_id,json=workflowsById,proto3" json:"workflows_by_id,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *GetWorkflowsResponse) Reset()         { *m = GetWorkflowsResponse{} }
func (m *GetWorkflowsResponse) String() string { return proto.CompactTextString(m) }
func (*GetWorkflowsResponse) ProtoMessage()    {}
func (*GetWorkflowsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{2}
}

func (m *GetWorkflowsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWorkflowsResponse.Unmarshal(m, b)
}
func (m *GetWorkflowsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWorkflowsResponse.Marshal(b, m, deterministic)
}
func (m *GetWorkflowsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWorkflowsResponse.Merge(m, src)
}
func (m *GetWorkflowsResponse) XXX_Size() int {
	return xxx_messageInfo_GetWorkflowsResponse.Size(m)
}
func (m *GetWorkflowsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWorkflowsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetWorkflowsResponse proto.InternalMessageInfo

func (m *GetWorkflowsResponse) GetWorkflowsById() map[string]*GetWorkflowsResponse_Workflows {
	if m != nil {
		return m.WorkflowsById
	}
	return nil
}

type GetWorkflowsResponse_Workflows struct {
	Workflows            []*model.Workflow `protobuf:"bytes,1,rep,name=workflows,proto3" json:"workflows,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *GetWorkflowsResponse_Workflows) Reset()         { *m = GetWorkflowsResponse_Workflows{} }
func (m *GetWorkflowsResponse_Workflows) String() string { return proto.CompactTextString(m) }
func (*GetWorkflowsResponse_Workflows) ProtoMessage()    {}
func (*GetWorkflowsResponse_Workflows) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{2, 0}
}

func (m *GetWorkflowsResponse_Workflows) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWorkflowsResponse_Workflows.Unmarshal(m, b)
}
func (m *GetWorkflowsResponse_Workflows) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWorkflowsResponse_Workflows.Marshal(b, m, deterministic)
}
func (m *GetWorkflowsResponse_Workflows) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWorkflowsResponse_Workflows.Merge(m, src)
}
func (m *GetWorkflowsResponse_Workflows) XXX_Size() int {
	return xxx_messageInfo_GetWorkflowsResponse_Workflows.Size(m)
}
func (m *GetWorkflowsResponse_Workflows) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWorkflowsResponse_Workflows.DiscardUnknown(m)
}

var xxx_messageInfo_GetWorkflowsResponse_Workflows proto.InternalMessageInfo

func (m *GetWorkflowsResponse_Workflows) GetWorkflows() []*model.Workflow {
	if m != nil {
		return m.Workflows
	}
	return nil
}

type GetWorkflowStatusRequest struct {
	WorkflowId           string   `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	IncludeTasks         bool     `protobuf:"varint,2,opt,name=include_tasks,json=includeTasks,proto3" json:"include_tasks,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWorkflowStatusRequest) Reset()         { *m = GetWorkflowStatusRequest{} }
func (m *GetWorkflowStatusRequest) String() string { return proto.CompactTextString(m) }
func (*GetWorkflowStatusRequest) ProtoMessage()    {}
func (*GetWorkflowStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{3}
}

func (m *GetWorkflowStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWorkflowStatusRequest.Unmarshal(m, b)
}
func (m *GetWorkflowStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWorkflowStatusRequest.Marshal(b, m, deterministic)
}
func (m *GetWorkflowStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWorkflowStatusRequest.Merge(m, src)
}
func (m *GetWorkflowStatusRequest) XXX_Size() int {
	return xxx_messageInfo_GetWorkflowStatusRequest.Size(m)
}
func (m *GetWorkflowStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWorkflowStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWorkflowStatusRequest proto.InternalMessageInfo

func (m *GetWorkflowStatusRequest) GetWorkflowId() string {
	if m != nil {
		return m.WorkflowId
	}
	return ""
}

func (m *GetWorkflowStatusRequest) GetIncludeTasks() bool {
	if m != nil {
		return m.IncludeTasks
	}
	return false
}

type GetWorkflowStatusResponse struct {
	Workflow             *model.Workflow `protobuf:"bytes,1,opt,name=workflow,proto3" json:"workflow,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *GetWorkflowStatusResponse) Reset()         { *m = GetWorkflowStatusResponse{} }
func (m *GetWorkflowStatusResponse) String() string { return proto.CompactTextString(m) }
func (*GetWorkflowStatusResponse) ProtoMessage()    {}
func (*GetWorkflowStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{4}
}

func (m *GetWorkflowStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWorkflowStatusResponse.Unmarshal(m, b)
}
func (m *GetWorkflowStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWorkflowStatusResponse.Marshal(b, m, deterministic)
}
func (m *GetWorkflowStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWorkflowStatusResponse.Merge(m, src)
}
func (m *GetWorkflowStatusResponse) XXX_Size() int {
	return xxx_messageInfo_GetWorkflowStatusResponse.Size(m)
}
func (m *GetWorkflowStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWorkflowStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetWorkflowStatusResponse proto.InternalMessageInfo

func (m *GetWorkflowStatusResponse) GetWorkflow() *model.Workflow {
	if m != nil {
		return m.Workflow
	}
	return nil
}

type RemoveWorkflowRequest struct {
	WorkflodId           string   `protobuf:"bytes,1,opt,name=workflod_id,json=workflodId,proto3" json:"workflod_id,omitempty"`
	ArchiveWorkflow      bool     `protobuf:"varint,2,opt,name=archive_workflow,json=archiveWorkflow,proto3" json:"archive_workflow,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveWorkflowRequest) Reset()         { *m = RemoveWorkflowRequest{} }
func (m *RemoveWorkflowRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveWorkflowRequest) ProtoMessage()    {}
func (*RemoveWorkflowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{5}
}

func (m *RemoveWorkflowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveWorkflowRequest.Unmarshal(m, b)
}
func (m *RemoveWorkflowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveWorkflowRequest.Marshal(b, m, deterministic)
}
func (m *RemoveWorkflowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveWorkflowRequest.Merge(m, src)
}
func (m *RemoveWorkflowRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveWorkflowRequest.Size(m)
}
func (m *RemoveWorkflowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveWorkflowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveWorkflowRequest proto.InternalMessageInfo

func (m *RemoveWorkflowRequest) GetWorkflodId() string {
	if m != nil {
		return m.WorkflodId
	}
	return ""
}

func (m *RemoveWorkflowRequest) GetArchiveWorkflow() bool {
	if m != nil {
		return m.ArchiveWorkflow
	}
	return false
}

type RemoveWorkflowResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveWorkflowResponse) Reset()         { *m = RemoveWorkflowResponse{} }
func (m *RemoveWorkflowResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveWorkflowResponse) ProtoMessage()    {}
func (*RemoveWorkflowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{6}
}

func (m *RemoveWorkflowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveWorkflowResponse.Unmarshal(m, b)
}
func (m *RemoveWorkflowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveWorkflowResponse.Marshal(b, m, deterministic)
}
func (m *RemoveWorkflowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveWorkflowResponse.Merge(m, src)
}
func (m *RemoveWorkflowResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveWorkflowResponse.Size(m)
}
func (m *RemoveWorkflowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveWorkflowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveWorkflowResponse proto.InternalMessageInfo

type GetRunningWorkflowsRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version              int32    `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	StartTime            int64    `protobuf:"varint,3,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              int64    `protobuf:"varint,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRunningWorkflowsRequest) Reset()         { *m = GetRunningWorkflowsRequest{} }
func (m *GetRunningWorkflowsRequest) String() string { return proto.CompactTextString(m) }
func (*GetRunningWorkflowsRequest) ProtoMessage()    {}
func (*GetRunningWorkflowsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{7}
}

func (m *GetRunningWorkflowsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRunningWorkflowsRequest.Unmarshal(m, b)
}
func (m *GetRunningWorkflowsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRunningWorkflowsRequest.Marshal(b, m, deterministic)
}
func (m *GetRunningWorkflowsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRunningWorkflowsRequest.Merge(m, src)
}
func (m *GetRunningWorkflowsRequest) XXX_Size() int {
	return xxx_messageInfo_GetRunningWorkflowsRequest.Size(m)
}
func (m *GetRunningWorkflowsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRunningWorkflowsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRunningWorkflowsRequest proto.InternalMessageInfo

func (m *GetRunningWorkflowsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetRunningWorkflowsRequest) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *GetRunningWorkflowsRequest) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *GetRunningWorkflowsRequest) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

type GetRunningWorkflowsResponse struct {
	WorkflowIds          []string `protobuf:"bytes,1,rep,name=workflow_ids,json=workflowIds,proto3" json:"workflow_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRunningWorkflowsResponse) Reset()         { *m = GetRunningWorkflowsResponse{} }
func (m *GetRunningWorkflowsResponse) String() string { return proto.CompactTextString(m) }
func (*GetRunningWorkflowsResponse) ProtoMessage()    {}
func (*GetRunningWorkflowsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{8}
}

func (m *GetRunningWorkflowsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRunningWorkflowsResponse.Unmarshal(m, b)
}
func (m *GetRunningWorkflowsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRunningWorkflowsResponse.Marshal(b, m, deterministic)
}
func (m *GetRunningWorkflowsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRunningWorkflowsResponse.Merge(m, src)
}
func (m *GetRunningWorkflowsResponse) XXX_Size() int {
	return xxx_messageInfo_GetRunningWorkflowsResponse.Size(m)
}
func (m *GetRunningWorkflowsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRunningWorkflowsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRunningWorkflowsResponse proto.InternalMessageInfo

func (m *GetRunningWorkflowsResponse) GetWorkflowIds() []string {
	if m != nil {
		return m.WorkflowIds
	}
	return nil
}

type DecideWorkflowRequest struct {
	WorkflowId           string   `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecideWorkflowRequest) Reset()         { *m = DecideWorkflowRequest{} }
func (m *DecideWorkflowRequest) String() string { return proto.CompactTextString(m) }
func (*DecideWorkflowRequest) ProtoMessage()    {}
func (*DecideWorkflowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{9}
}

func (m *DecideWorkflowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecideWorkflowRequest.Unmarshal(m, b)
}
func (m *DecideWorkflowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecideWorkflowRequest.Marshal(b, m, deterministic)
}
func (m *DecideWorkflowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecideWorkflowRequest.Merge(m, src)
}
func (m *DecideWorkflowRequest) XXX_Size() int {
	return xxx_messageInfo_DecideWorkflowRequest.Size(m)
}
func (m *DecideWorkflowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DecideWorkflowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DecideWorkflowRequest proto.InternalMessageInfo

func (m *DecideWorkflowRequest) GetWorkflowId() string {
	if m != nil {
		return m.WorkflowId
	}
	return ""
}

type DecideWorkflowResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecideWorkflowResponse) Reset()         { *m = DecideWorkflowResponse{} }
func (m *DecideWorkflowResponse) String() string { return proto.CompactTextString(m) }
func (*DecideWorkflowResponse) ProtoMessage()    {}
func (*DecideWorkflowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{10}
}

func (m *DecideWorkflowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecideWorkflowResponse.Unmarshal(m, b)
}
func (m *DecideWorkflowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecideWorkflowResponse.Marshal(b, m, deterministic)
}
func (m *DecideWorkflowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecideWorkflowResponse.Merge(m, src)
}
func (m *DecideWorkflowResponse) XXX_Size() int {
	return xxx_messageInfo_DecideWorkflowResponse.Size(m)
}
func (m *DecideWorkflowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DecideWorkflowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DecideWorkflowResponse proto.InternalMessageInfo

type PauseWorkflowRequest struct {
	WorkflowId           string   `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PauseWorkflowRequest) Reset()         { *m = PauseWorkflowRequest{} }
func (m *PauseWorkflowRequest) String() string { return proto.CompactTextString(m) }
func (*PauseWorkflowRequest) ProtoMessage()    {}
func (*PauseWorkflowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{11}
}

func (m *PauseWorkflowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PauseWorkflowRequest.Unmarshal(m, b)
}
func (m *PauseWorkflowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PauseWorkflowRequest.Marshal(b, m, deterministic)
}
func (m *PauseWorkflowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PauseWorkflowRequest.Merge(m, src)
}
func (m *PauseWorkflowRequest) XXX_Size() int {
	return xxx_messageInfo_PauseWorkflowRequest.Size(m)
}
func (m *PauseWorkflowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PauseWorkflowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PauseWorkflowRequest proto.InternalMessageInfo

func (m *PauseWorkflowRequest) GetWorkflowId() string {
	if m != nil {
		return m.WorkflowId
	}
	return ""
}

type PauseWorkflowResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PauseWorkflowResponse) Reset()         { *m = PauseWorkflowResponse{} }
func (m *PauseWorkflowResponse) String() string { return proto.CompactTextString(m) }
func (*PauseWorkflowResponse) ProtoMessage()    {}
func (*PauseWorkflowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{12}
}

func (m *PauseWorkflowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PauseWorkflowResponse.Unmarshal(m, b)
}
func (m *PauseWorkflowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PauseWorkflowResponse.Marshal(b, m, deterministic)
}
func (m *PauseWorkflowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PauseWorkflowResponse.Merge(m, src)
}
func (m *PauseWorkflowResponse) XXX_Size() int {
	return xxx_messageInfo_PauseWorkflowResponse.Size(m)
}
func (m *PauseWorkflowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PauseWorkflowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PauseWorkflowResponse proto.InternalMessageInfo

type ResumeWorkflowRequest struct {
	WorkflowId           string   `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResumeWorkflowRequest) Reset()         { *m = ResumeWorkflowRequest{} }
func (m *ResumeWorkflowRequest) String() string { return proto.CompactTextString(m) }
func (*ResumeWorkflowRequest) ProtoMessage()    {}
func (*ResumeWorkflowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{13}
}

func (m *ResumeWorkflowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeWorkflowRequest.Unmarshal(m, b)
}
func (m *ResumeWorkflowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeWorkflowRequest.Marshal(b, m, deterministic)
}
func (m *ResumeWorkflowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeWorkflowRequest.Merge(m, src)
}
func (m *ResumeWorkflowRequest) XXX_Size() int {
	return xxx_messageInfo_ResumeWorkflowRequest.Size(m)
}
func (m *ResumeWorkflowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeWorkflowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeWorkflowRequest proto.InternalMessageInfo

func (m *ResumeWorkflowRequest) GetWorkflowId() string {
	if m != nil {
		return m.WorkflowId
	}
	return ""
}

type ResumeWorkflowResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResumeWorkflowResponse) Reset()         { *m = ResumeWorkflowResponse{} }
func (m *ResumeWorkflowResponse) String() string { return proto.CompactTextString(m) }
func (*ResumeWorkflowResponse) ProtoMessage()    {}
func (*ResumeWorkflowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{14}
}

func (m *ResumeWorkflowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResumeWorkflowResponse.Unmarshal(m, b)
}
func (m *ResumeWorkflowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResumeWorkflowResponse.Marshal(b, m, deterministic)
}
func (m *ResumeWorkflowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResumeWorkflowResponse.Merge(m, src)
}
func (m *ResumeWorkflowResponse) XXX_Size() int {
	return xxx_messageInfo_ResumeWorkflowResponse.Size(m)
}
func (m *ResumeWorkflowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResumeWorkflowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResumeWorkflowResponse proto.InternalMessageInfo

type SkipTaskRequest struct {
	WorkflowId           string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	TaskReferenceName    string                 `protobuf:"bytes,2,opt,name=task_reference_name,json=taskReferenceName,proto3" json:"task_reference_name,omitempty"`
	Request              *model.SkipTaskRequest `protobuf:"bytes,3,opt,name=request,proto3" json:"request,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *SkipTaskRequest) Reset()         { *m = SkipTaskRequest{} }
func (m *SkipTaskRequest) String() string { return proto.CompactTextString(m) }
func (*SkipTaskRequest) ProtoMessage()    {}
func (*SkipTaskRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{15}
}

func (m *SkipTaskRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SkipTaskRequest.Unmarshal(m, b)
}
func (m *SkipTaskRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SkipTaskRequest.Marshal(b, m, deterministic)
}
func (m *SkipTaskRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SkipTaskRequest.Merge(m, src)
}
func (m *SkipTaskRequest) XXX_Size() int {
	return xxx_messageInfo_SkipTaskRequest.Size(m)
}
func (m *SkipTaskRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SkipTaskRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SkipTaskRequest proto.InternalMessageInfo

func (m *SkipTaskRequest) GetWorkflowId() string {
	if m != nil {
		return m.WorkflowId
	}
	return ""
}

func (m *SkipTaskRequest) GetTaskReferenceName() string {
	if m != nil {
		return m.TaskReferenceName
	}
	return ""
}

func (m *SkipTaskRequest) GetRequest() *model.SkipTaskRequest {
	if m != nil {
		return m.Request
	}
	return nil
}

type SkipTaskResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SkipTaskResponse) Reset()         { *m = SkipTaskResponse{} }
func (m *SkipTaskResponse) String() string { return proto.CompactTextString(m) }
func (*SkipTaskResponse) ProtoMessage()    {}
func (*SkipTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{16}
}

func (m *SkipTaskResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SkipTaskResponse.Unmarshal(m, b)
}
func (m *SkipTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SkipTaskResponse.Marshal(b, m, deterministic)
}
func (m *SkipTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SkipTaskResponse.Merge(m, src)
}
func (m *SkipTaskResponse) XXX_Size() int {
	return xxx_messageInfo_SkipTaskResponse.Size(m)
}
func (m *SkipTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SkipTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SkipTaskResponse proto.InternalMessageInfo

type RerunWorkflowResponse struct {
	WorkflowId           string   `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RerunWorkflowResponse) Reset()         { *m = RerunWorkflowResponse{} }
func (m *RerunWorkflowResponse) String() string { return proto.CompactTextString(m) }
func (*RerunWorkflowResponse) ProtoMessage()    {}
func (*RerunWorkflowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{17}
}

func (m *RerunWorkflowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RerunWorkflowResponse.Unmarshal(m, b)
}
func (m *RerunWorkflowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RerunWorkflowResponse.Marshal(b, m, deterministic)
}
func (m *RerunWorkflowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RerunWorkflowResponse.Merge(m, src)
}
func (m *RerunWorkflowResponse) XXX_Size() int {
	return xxx_messageInfo_RerunWorkflowResponse.Size(m)
}
func (m *RerunWorkflowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RerunWorkflowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RerunWorkflowResponse proto.InternalMessageInfo

func (m *RerunWorkflowResponse) GetWorkflowId() string {
	if m != nil {
		return m.WorkflowId
	}
	return ""
}

type RestartWorkflowRequest struct {
	WorkflowId           string   `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	UseLatestDefinitions bool     `protobuf:"varint,2,opt,name=use_latest_definitions,json=useLatestDefinitions,proto3" json:"use_latest_definitions,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestartWorkflowRequest) Reset()         { *m = RestartWorkflowRequest{} }
func (m *RestartWorkflowRequest) String() string { return proto.CompactTextString(m) }
func (*RestartWorkflowRequest) ProtoMessage()    {}
func (*RestartWorkflowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{18}
}

func (m *RestartWorkflowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestartWorkflowRequest.Unmarshal(m, b)
}
func (m *RestartWorkflowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestartWorkflowRequest.Marshal(b, m, deterministic)
}
func (m *RestartWorkflowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestartWorkflowRequest.Merge(m, src)
}
func (m *RestartWorkflowRequest) XXX_Size() int {
	return xxx_messageInfo_RestartWorkflowRequest.Size(m)
}
func (m *RestartWorkflowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RestartWorkflowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RestartWorkflowRequest proto.InternalMessageInfo

func (m *RestartWorkflowRequest) GetWorkflowId() string {
	if m != nil {
		return m.WorkflowId
	}
	return ""
}

func (m *RestartWorkflowRequest) GetUseLatestDefinitions() bool {
	if m != nil {
		return m.UseLatestDefinitions
	}
	return false
}

type RestartWorkflowResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestartWorkflowResponse) Reset()         { *m = RestartWorkflowResponse{} }
func (m *RestartWorkflowResponse) String() string { return proto.CompactTextString(m) }
func (*RestartWorkflowResponse) ProtoMessage()    {}
func (*RestartWorkflowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{19}
}

func (m *RestartWorkflowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestartWorkflowResponse.Unmarshal(m, b)
}
func (m *RestartWorkflowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestartWorkflowResponse.Marshal(b, m, deterministic)
}
func (m *RestartWorkflowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestartWorkflowResponse.Merge(m, src)
}
func (m *RestartWorkflowResponse) XXX_Size() int {
	return xxx_messageInfo_RestartWorkflowResponse.Size(m)
}
func (m *RestartWorkflowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RestartWorkflowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RestartWorkflowResponse proto.InternalMessageInfo

type RetryWorkflowRequest struct {
	WorkflowId           string   `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RetryWorkflowRequest) Reset()         { *m = RetryWorkflowRequest{} }
func (m *RetryWorkflowRequest) String() string { return proto.CompactTextString(m) }
func (*RetryWorkflowRequest) ProtoMessage()    {}
func (*RetryWorkflowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{20}
}

func (m *RetryWorkflowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetryWorkflowRequest.Unmarshal(m, b)
}
func (m *RetryWorkflowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetryWorkflowRequest.Marshal(b, m, deterministic)
}
func (m *RetryWorkflowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetryWorkflowRequest.Merge(m, src)
}
func (m *RetryWorkflowRequest) XXX_Size() int {
	return xxx_messageInfo_RetryWorkflowRequest.Size(m)
}
func (m *RetryWorkflowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RetryWorkflowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RetryWorkflowRequest proto.InternalMessageInfo

func (m *RetryWorkflowRequest) GetWorkflowId() string {
	if m != nil {
		return m.WorkflowId
	}
	return ""
}

type RetryWorkflowResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RetryWorkflowResponse) Reset()         { *m = RetryWorkflowResponse{} }
func (m *RetryWorkflowResponse) String() string { return proto.CompactTextString(m) }
func (*RetryWorkflowResponse) ProtoMessage()    {}
func (*RetryWorkflowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{21}
}

func (m *RetryWorkflowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RetryWorkflowResponse.Unmarshal(m, b)
}
func (m *RetryWorkflowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RetryWorkflowResponse.Marshal(b, m, deterministic)
}
func (m *RetryWorkflowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RetryWorkflowResponse.Merge(m, src)
}
func (m *RetryWorkflowResponse) XXX_Size() int {
	return xxx_messageInfo_RetryWorkflowResponse.Size(m)
}
func (m *RetryWorkflowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RetryWorkflowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RetryWorkflowResponse proto.InternalMessageInfo

type ResetWorkflowCallbacksRequest struct {
	WorkflowId           string   `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetWorkflowCallbacksRequest) Reset()         { *m = ResetWorkflowCallbacksRequest{} }
func (m *ResetWorkflowCallbacksRequest) String() string { return proto.CompactTextString(m) }
func (*ResetWorkflowCallbacksRequest) ProtoMessage()    {}
func (*ResetWorkflowCallbacksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{22}
}

func (m *ResetWorkflowCallbacksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetWorkflowCallbacksRequest.Unmarshal(m, b)
}
func (m *ResetWorkflowCallbacksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetWorkflowCallbacksRequest.Marshal(b, m, deterministic)
}
func (m *ResetWorkflowCallbacksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetWorkflowCallbacksRequest.Merge(m, src)
}
func (m *ResetWorkflowCallbacksRequest) XXX_Size() int {
	return xxx_messageInfo_ResetWorkflowCallbacksRequest.Size(m)
}
func (m *ResetWorkflowCallbacksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetWorkflowCallbacksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResetWorkflowCallbacksRequest proto.InternalMessageInfo

func (m *ResetWorkflowCallbacksRequest) GetWorkflowId() string {
	if m != nil {
		return m.WorkflowId
	}
	return ""
}

type ResetWorkflowCallbacksResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetWorkflowCallbacksResponse) Reset()         { *m = ResetWorkflowCallbacksResponse{} }
func (m *ResetWorkflowCallbacksResponse) String() string { return proto.CompactTextString(m) }
func (*ResetWorkflowCallbacksResponse) ProtoMessage()    {}
func (*ResetWorkflowCallbacksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{23}
}

func (m *ResetWorkflowCallbacksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetWorkflowCallbacksResponse.Unmarshal(m, b)
}
func (m *ResetWorkflowCallbacksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetWorkflowCallbacksResponse.Marshal(b, m, deterministic)
}
func (m *ResetWorkflowCallbacksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetWorkflowCallbacksResponse.Merge(m, src)
}
func (m *ResetWorkflowCallbacksResponse) XXX_Size() int {
	return xxx_messageInfo_ResetWorkflowCallbacksResponse.Size(m)
}
func (m *ResetWorkflowCallbacksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetWorkflowCallbacksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ResetWorkflowCallbacksResponse proto.InternalMessageInfo

type TerminateWorkflowRequest struct {
	WorkflowId           string   `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TerminateWorkflowRequest) Reset()         { *m = TerminateWorkflowRequest{} }
func (m *TerminateWorkflowRequest) String() string { return proto.CompactTextString(m) }
func (*TerminateWorkflowRequest) ProtoMessage()    {}
func (*TerminateWorkflowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{24}
}

func (m *TerminateWorkflowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TerminateWorkflowRequest.Unmarshal(m, b)
}
func (m *TerminateWorkflowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TerminateWorkflowRequest.Marshal(b, m, deterministic)
}
func (m *TerminateWorkflowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TerminateWorkflowRequest.Merge(m, src)
}
func (m *TerminateWorkflowRequest) XXX_Size() int {
	return xxx_messageInfo_TerminateWorkflowRequest.Size(m)
}
func (m *TerminateWorkflowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TerminateWorkflowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TerminateWorkflowRequest proto.InternalMessageInfo

func (m *TerminateWorkflowRequest) GetWorkflowId() string {
	if m != nil {
		return m.WorkflowId
	}
	return ""
}

func (m *TerminateWorkflowRequest) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type TerminateWorkflowResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TerminateWorkflowResponse) Reset()         { *m = TerminateWorkflowResponse{} }
func (m *TerminateWorkflowResponse) String() string { return proto.CompactTextString(m) }
func (*TerminateWorkflowResponse) ProtoMessage()    {}
func (*TerminateWorkflowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{25}
}

func (m *TerminateWorkflowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TerminateWorkflowResponse.Unmarshal(m, b)
}
func (m *TerminateWorkflowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TerminateWorkflowResponse.Marshal(b, m, deterministic)
}
func (m *TerminateWorkflowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TerminateWorkflowResponse.Merge(m, src)
}
func (m *TerminateWorkflowResponse) XXX_Size() int {
	return xxx_messageInfo_TerminateWorkflowResponse.Size(m)
}
func (m *TerminateWorkflowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TerminateWorkflowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TerminateWorkflowResponse proto.InternalMessageInfo

type WorkflowSummarySearchResult struct {
	TotalHits            int64                    `protobuf:"varint,1,opt,name=total_hits,json=totalHits,proto3" json:"total_hits,omitempty"`
	Results              []*model.WorkflowSummary `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *WorkflowSummarySearchResult) Reset()         { *m = WorkflowSummarySearchResult{} }
func (m *WorkflowSummarySearchResult) String() string { return proto.CompactTextString(m) }
func (*WorkflowSummarySearchResult) ProtoMessage()    {}
func (*WorkflowSummarySearchResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_3b1a60cd5e5af62d, []int{26}
}

func (m *WorkflowSummarySearchResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowSummarySearchResult.Unmarshal(m, b)
}
func (m *WorkflowSummarySearchResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowSummarySearchResult.Marshal(b, m, deterministic)
}
func (m *WorkflowSummarySearchResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowSummarySearchResult.Merge(m, src)
}
func (m *WorkflowSummarySearchResult) XXX_Size() int {
	return xxx_messageInfo_WorkflowSummarySearchResult.Size(m)
}
func (m *WorkflowSummarySearchResult) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowSummarySearchResult.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowSummarySearchResult proto.InternalMessageInfo

func (m *WorkflowSummarySearchResult) GetTotalHits() int64 {
	if m != nil {
		return m.TotalHits
	}
	return 0
}

func (m *WorkflowSummarySearchResult) GetResults() []*model.WorkflowSummary {
	if m != nil {
		return m.Results
	}
	return nil
}

func init() {
	proto.RegisterType((*StartWorkflowResponse)(nil), "conductor.service.StartWorkflowResponse")
	proto.RegisterType((*GetWorkflowsRequest)(nil), "conductor.service.GetWorkflowsRequest")
	proto.RegisterType((*GetWorkflowsResponse)(nil), "conductor.service.GetWorkflowsResponse")
	proto.RegisterMapType((map[string]*GetWorkflowsResponse_Workflows)(nil), "conductor.service.GetWorkflowsResponse.WorkflowsByIdEntry")
	proto.RegisterType((*GetWorkflowsResponse_Workflows)(nil), "conductor.service.GetWorkflowsResponse.Workflows")
	proto.RegisterType((*GetWorkflowStatusRequest)(nil), "conductor.service.GetWorkflowStatusRequest")
	proto.RegisterType((*GetWorkflowStatusResponse)(nil), "conductor.service.GetWorkflowStatusResponse")
	proto.RegisterType((*RemoveWorkflowRequest)(nil), "conductor.service.RemoveWorkflowRequest")
	proto.RegisterType((*RemoveWorkflowResponse)(nil), "conductor.service.RemoveWorkflowResponse")
	proto.RegisterType((*GetRunningWorkflowsRequest)(nil), "conductor.service.GetRunningWorkflowsRequest")
	proto.RegisterType((*GetRunningWorkflowsResponse)(nil), "conductor.service.GetRunningWorkflowsResponse")
	proto.RegisterType((*DecideWorkflowRequest)(nil), "conductor.service.DecideWorkflowRequest")
	proto.RegisterType((*DecideWorkflowResponse)(nil), "conductor.service.DecideWorkflowResponse")
	proto.RegisterType((*PauseWorkflowRequest)(nil), "conductor.service.PauseWorkflowRequest")
	proto.RegisterType((*PauseWorkflowResponse)(nil), "conductor.service.PauseWorkflowResponse")
	proto.RegisterType((*ResumeWorkflowRequest)(nil), "conductor.service.ResumeWorkflowRequest")
	proto.RegisterType((*ResumeWorkflowResponse)(nil), "conductor.service.ResumeWorkflowResponse")
	proto.RegisterType((*SkipTaskRequest)(nil), "conductor.service.SkipTaskRequest")
	proto.RegisterType((*SkipTaskResponse)(nil), "conductor.service.SkipTaskResponse")
	proto.RegisterType((*RerunWorkflowResponse)(nil), "conductor.service.RerunWorkflowResponse")
	proto.RegisterType((*RestartWorkflowRequest)(nil), "conductor.service.RestartWorkflowRequest")
	proto.RegisterType((*RestartWorkflowResponse)(nil), "conductor.service.RestartWorkflowResponse")
	proto.RegisterType((*RetryWorkflowRequest)(nil), "conductor.service.RetryWorkflowRequest")
	proto.RegisterType((*RetryWorkflowResponse)(nil), "conductor.service.RetryWorkflowResponse")
	proto.RegisterType((*ResetWorkflowCallbacksRequest)(nil), "conductor.service.ResetWorkflowCallbacksRequest")
	proto.RegisterType((*ResetWorkflowCallbacksResponse)(nil), "conductor.service.ResetWorkflowCallbacksResponse")
	proto.RegisterType((*TerminateWorkflowRequest)(nil), "conductor.service.TerminateWorkflowRequest")
	proto.RegisterType((*TerminateWorkflowResponse)(nil), "conductor.service.TerminateWorkflowResponse")
	proto.RegisterType((*WorkflowSummarySearchResult)(nil), "conductor.service.WorkflowSummarySearchResult")
}

func init() { proto.RegisterFile("service/workflow_service.proto", fileDescriptor_3b1a60cd5e5af62d) }

var fileDescriptor_3b1a60cd5e5af62d = []byte{
	// 1132 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x6d, 0x4f, 0xdb, 0x46,
	0x1c, 0x57, 0x12, 0x0a, 0xe4, 0x0f, 0xe1, 0xe1, 0x1a, 0x68, 0x30, 0x6a, 0x97, 0xb9, 0xea, 0x96,
	0xee, 0x21, 0xac, 0x6c, 0x53, 0x11, 0xda, 0x8b, 0x8a, 0xb2, 0x31, 0xa4, 0x69, 0xaa, 0x0c, 0xd2,
	0xa4, 0xf5, 0x85, 0x71, 0xec, 0x3f, 0x60, 0xc5, 0x3e, 0xb3, 0xbb, 0x33, 0x34, 0x2f, 0xf6, 0x6e,
	0x1f, 0x63, 0xda, 0xb7, 0xd8, 0x27, 0xdb, 0x17, 0x98, 0x7c, 0x3e, 0x3b, 0xb1, 0x73, 0xa6, 0x49,
	0xd5, 0x77, 0xf6, 0xff, 0xf9, 0xf9, 0x77, 0xf0, 0x84, 0x23, 0xbb, 0xf5, 0x5d, 0xdc, 0xbb, 0x8b,
	0xd8, 0xf0, 0x32, 0x88, 0xee, 0x6c, 0x45, 0xe8, 0xdf, 0xb0, 0x48, 0x44, 0x64, 0xd3, 0x8d, 0xa8,
	0x17, 0xbb, 0x22, 0x62, 0x7d, 0xc5, 0x30, 0xda, 0x99, 0x0a, 0x47, 0x87, 0xb9, 0xd7, 0xa9, 0xa0,
	0xd1, 0x0e, 0x23, 0x0f, 0x83, 0xdc, 0x8c, 0xa2, 0xee, 0x16, 0xa9, 0x3c, 0x0e, 0x43, 0x87, 0x8d,
	0x8a, 0x4c, 0x3e, 0xf4, 0x6f, 0x84, 0xc3, 0x87, 0x0c, 0xff, 0x88, 0x91, 0x0b, 0xc5, 0xec, 0x2a,
	0xa6, 0x70, 0x98, 0xc8, 0xd4, 0xb5, 0x12, 0x0c, 0x59, 0x4c, 0xb5, 0x12, 0xe6, 0x01, 0x6c, 0x9d,
	0x25, 0xfa, 0xbf, 0x29, 0xae, 0x85, 0xfc, 0x26, 0xa2, 0x1c, 0xc9, 0x27, 0xb0, 0x92, 0xe7, 0xeb,
	0x7b, 0x9d, 0x5a, 0xb7, 0xd6, 0x6b, 0x5a, 0x90, 0x91, 0x4e, 0x3d, 0xf3, 0xef, 0x1a, 0x3c, 0x3c,
	0xc1, 0x5c, 0x91, 0x5b, 0xa9, 0x5d, 0x42, 0x60, 0x81, 0x3a, 0x21, 0x2a, 0x0d, 0xf9, 0x4d, 0x9e,
	0xc1, 0x9a, 0x1b, 0x31, 0x86, 0x81, 0x23, 0xfc, 0x88, 0x26, 0xf6, 0xea, 0xdd, 0x46, 0xaf, 0x69,
	0xb5, 0x26, 0xa8, 0xa7, 0x5e, 0x22, 0xe6, 0x53, 0x37, 0x88, 0x3d, 0xb4, 0xdd, 0x20, 0xe2, 0xe8,
	0x75, 0x1a, 0xdd, 0x5a, 0x6f, 0xd9, 0x6a, 0x29, 0xea, 0x6b, 0x49, 0x24, 0x4f, 0x21, 0x23, 0xd8,
	0x49, 0x51, 0x78, 0x67, 0x41, 0x4a, 0xad, 0x2a, 0xe2, 0x79, 0x42, 0x33, 0xff, 0xad, 0x43, 0xbb,
	0x18, 0x9e, 0x4a, 0x6c, 0x00, 0xeb, 0x79, 0xad, 0xed, 0xc1, 0x28, 0x4d, 0xae, 0xd1, 0x5b, 0xd9,
	0x3f, 0xec, 0x4f, 0x35, 0xb2, 0xaf, 0xb3, 0xd0, 0xcf, 0x29, 0x47, 0xa3, 0x53, 0xef, 0x47, 0x2a,
	0xd8, 0xc8, 0x6a, 0xdd, 0x4d, 0xd2, 0x8c, 0x63, 0x68, 0xe6, 0x42, 0xe4, 0x25, 0x34, 0x73, 0xae,
	0x72, 0xb5, 0x33, 0xe1, 0x4a, 0xf6, 0x21, 0xb7, 0x69, 0x8d, 0x65, 0x0d, 0x0e, 0x64, 0xda, 0x15,
	0xd9, 0x80, 0xc6, 0x10, 0x47, 0xaa, 0xbc, 0xc9, 0x27, 0x39, 0x81, 0x07, 0xb7, 0x4e, 0x10, 0x63,
	0xa7, 0xde, 0xad, 0xf5, 0x56, 0xf6, 0x5f, 0xcc, 0x9d, 0x87, 0x95, 0xea, 0x1f, 0xd6, 0x0f, 0x6a,
	0xe6, 0x05, 0x74, 0x26, 0x84, 0xcf, 0x84, 0x23, 0xe2, 0xbc, 0xb5, 0xef, 0x9b, 0x89, 0xe9, 0xce,
	0xd4, 0x35, 0x9d, 0xb1, 0x60, 0x47, 0xe3, 0x41, 0x75, 0xe7, 0x7b, 0x58, 0xce, 0xec, 0x49, 0xfb,
	0xf7, 0xd6, 0x2a, 0x17, 0x35, 0x5d, 0xd8, 0xb2, 0x30, 0x8c, 0x6e, 0x71, 0x3c, 0xc7, 0xe5, 0x90,
	0xbd, 0xe9, 0x90, 0xbd, 0x53, 0x8f, 0x3c, 0x87, 0x8d, 0x64, 0x45, 0xfd, 0x5b, 0xb4, 0x73, 0xc7,
	0x69, 0xd4, 0xeb, 0x8a, 0x9e, 0x99, 0x34, 0x3b, 0xb0, 0x5d, 0x76, 0x92, 0x46, 0x6d, 0xfe, 0x55,
	0x03, 0xe3, 0x04, 0x85, 0x15, 0x53, 0xea, 0xd3, 0xab, 0x99, 0x56, 0xa2, 0x03, 0x4b, 0xb7, 0xc8,
	0xb8, 0x1f, 0x51, 0xe9, 0xee, 0x81, 0x95, 0xfd, 0x92, 0xc7, 0x00, 0x72, 0xa5, 0x6d, 0xe1, 0x87,
	0x28, 0x37, 0xa0, 0x61, 0x35, 0x25, 0xe5, 0xdc, 0x0f, 0x91, 0xec, 0xc0, 0x32, 0x52, 0x2f, 0x65,
	0x2e, 0x48, 0xe6, 0x12, 0x52, 0x2f, 0x61, 0x99, 0xaf, 0x60, 0x57, 0x1b, 0x85, 0xaa, 0xed, 0xa7,
	0xb0, 0x3a, 0xd1, 0xbe, 0x74, 0x16, 0x9b, 0xd6, 0xca, 0xb8, 0x7f, 0x3c, 0x39, 0x07, 0xc7, 0xe8,
	0xfa, 0xde, 0x3d, 0x75, 0xac, 0x38, 0x07, 0x1d, 0xd8, 0x2e, 0x6b, 0xaa, 0xe2, 0xbc, 0x84, 0xf6,
	0x1b, 0x27, 0xe6, 0xf3, 0x9b, 0x7c, 0x04, 0x5b, 0x25, 0x45, 0x65, 0xf1, 0x20, 0xe9, 0x36, 0x8f,
	0xc3, 0x0f, 0x8a, 0xb2, 0xac, 0xa9, 0x6c, 0xfe, 0x53, 0x83, 0xf5, 0xb3, 0xa1, 0x7f, 0x93, 0xcc,
	0xe8, 0xcc, 0xf3, 0xde, 0x87, 0x87, 0xc9, 0x9c, 0xdb, 0x0c, 0x2f, 0x91, 0x21, 0x75, 0xd1, 0x96,
	0x7d, 0xae, 0x4b, 0xc1, 0x4d, 0x21, 0x4d, 0x29, 0xce, 0xaf, 0x49, 0xd3, 0x0f, 0x61, 0x49, 0x9d,
	0x5f, 0xd9, 0xd7, 0x95, 0xfd, 0xee, 0xd4, 0x70, 0x97, 0x62, 0xb0, 0x32, 0x05, 0x93, 0xc0, 0xc6,
	0x98, 0x37, 0x59, 0x08, 0x16, 0xd3, 0xf9, 0xaf, 0x77, 0x24, 0x0b, 0x51, 0xbc, 0xfc, 0x33, 0x26,
	0xfd, 0x1d, 0x6c, 0xc7, 0x1c, 0xed, 0xc0, 0x11, 0xc8, 0x85, 0xed, 0xe1, 0xa5, 0x4f, 0xfd, 0xe4,
	0x80, 0x67, 0xdb, 0xde, 0x8e, 0x39, 0xfe, 0x22, 0x99, 0xc7, 0x63, 0x9e, 0xb9, 0x03, 0x8f, 0xa6,
	0x1c, 0x8e, 0x07, 0xc4, 0x42, 0xc1, 0x46, 0x1f, 0x32, 0x20, 0x25, 0x45, 0x65, 0xf1, 0x15, 0x3c,
	0xb6, 0x90, 0x8f, 0x8f, 0xcc, 0x6b, 0x27, 0x08, 0x06, 0x8e, 0x3b, 0x9c, 0xf9, 0x92, 0x99, 0x5d,
	0x78, 0x52, 0x65, 0x41, 0xf9, 0x38, 0x83, 0xce, 0x39, 0xb2, 0xd0, 0xa7, 0x8e, 0x98, 0x7b, 0x0e,
	0xc9, 0x36, 0x2c, 0x32, 0x74, 0xb8, 0x5a, 0xfe, 0xa6, 0xa5, 0xfe, 0xcc, 0x5d, 0xd8, 0xd1, 0x18,
	0x55, 0x1e, 0xdf, 0xc1, 0x6e, 0x7e, 0x35, 0xd3, 0x57, 0xc2, 0x99, 0x7c, 0x5e, 0x24, 0x13, 0x1d,
	0x88, 0xe4, 0x6e, 0x88, 0x48, 0x38, 0x81, 0x7d, 0xed, 0x0b, 0x2e, 0x7d, 0x36, 0xac, 0xa6, 0xa4,
	0xfc, 0xec, 0x0b, 0x9e, 0xce, 0x5e, 0x22, 0xc8, 0x25, 0xf8, 0xea, 0x66, 0xaf, 0x64, 0xdd, 0xca,
	0x14, 0xf6, 0xff, 0x5b, 0x85, 0xf5, 0x9c, 0x99, 0x42, 0x0a, 0xb9, 0x80, 0x56, 0xe1, 0xe5, 0x40,
	0x9e, 0x4d, 0xcf, 0xb2, 0x66, 0xbe, 0x8c, 0x9e, 0x06, 0x9e, 0xf4, 0x4f, 0x10, 0x1b, 0x56, 0x27,
	0x71, 0x8b, 0x7c, 0xf6, 0x5e, 0x60, 0x4b, 0x3d, 0x7c, 0x3e, 0x23, 0x00, 0x92, 0xb7, 0xb0, 0x39,
	0x85, 0x44, 0xe4, 0xcb, 0xfb, 0xb5, 0x0b, 0x88, 0x68, 0x54, 0x83, 0x13, 0x41, 0x58, 0x2b, 0xa2,
	0x05, 0xd1, 0x65, 0xae, 0x45, 0x2d, 0xe3, 0xf9, 0x0c, 0x92, 0x2a, 0x07, 0x21, 0x5f, 0x61, 0xe5,
	0x9b, 0x4f, 0xbe, 0xd6, 0x67, 0x51, 0x81, 0x50, 0x46, 0x7f, 0x56, 0x71, 0xe5, 0x15, 0x61, 0xad,
	0x78, 0xed, 0xb5, 0xc9, 0x69, 0xa1, 0x44, 0x9b, 0x9c, 0x1e, 0x3a, 0xc8, 0x00, 0x5a, 0x05, 0x04,
	0x20, 0xba, 0xd6, 0xea, 0xc0, 0x45, 0x3b, 0x65, 0x5a, 0x30, 0x49, 0xfb, 0x34, 0x09, 0x09, 0x15,
	0x7d, 0xd2, 0xe0, 0x4d, 0x45, 0x9f, 0x74, 0xf8, 0x42, 0x6c, 0x68, 0x67, 0xe7, 0xfb, 0x27, 0x16,
	0x85, 0xb9, 0x33, 0x53, 0xb7, 0x0e, 0x45, 0x0c, 0x30, 0x9e, 0xde, 0x2b, 0xa3, 0x1c, 0x5c, 0x40,
	0xab, 0x80, 0x05, 0x9a, 0x7d, 0x2c, 0x61, 0x45, 0x75, 0xa5, 0xf4, 0xa0, 0x72, 0x0d, 0xeb, 0xa5,
	0x13, 0x4e, 0x2a, 0x0a, 0xa0, 0xdb, 0xfb, 0x2f, 0x66, 0x11, 0x1d, 0xf7, 0xbd, 0x70, 0xd8, 0xb5,
	0x7d, 0xd7, 0x61, 0x46, 0x45, 0x36, 0x1a, 0x8c, 0x20, 0x7f, 0x4a, 0x04, 0xd4, 0x5c, 0x78, 0xf2,
	0x8d, 0x3e, 0xd2, 0x6a, 0x38, 0x31, 0x5e, 0xcc, 0xa1, 0xa1, 0xdc, 0x53, 0xd8, 0x9c, 0xba, 0xf4,
	0xda, 0xdb, 0x53, 0x05, 0x32, 0xc6, 0x57, 0xb3, 0x09, 0x2b, 0x7f, 0xe7, 0xb0, 0x98, 0xa2, 0x05,
	0x31, 0xb4, 0xc1, 0x56, 0xdf, 0x81, 0xfb, 0x30, 0xe7, 0x2d, 0xb4, 0xd2, 0xff, 0xa3, 0x91, 0x7c,
	0xdc, 0x7f, 0x4c, 0xe3, 0x47, 0x21, 0x18, 0x6e, 0x14, 0xf6, 0x29, 0x8a, 0xcb, 0xc0, 0x7f, 0x37,
	0xa1, 0x7c, 0xc5, 0x6e, 0xdc, 0xa3, 0xcd, 0x12, 0x20, 0xbd, 0x19, 0xfc, 0xfe, 0xc3, 0x95, 0x2f,
	0xae, 0xe3, 0x41, 0xdf, 0x8d, 0xc2, 0x3d, 0xa5, 0xb5, 0x97, 0x6b, 0xed, 0xb9, 0x81, 0x8f, 0x54,
	0xec, 0x5d, 0x45, 0x89, 0xfa, 0x04, 0x5d, 0x85, 0x32, 0x58, 0x94, 0x4b, 0xf2, 0xed, 0xff, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xeb, 0xe9, 0x89, 0x56, 0xf0, 0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WorkflowServiceClient is the client API for WorkflowService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorkflowServiceClient interface {
	// POST /
	StartWorkflow(ctx context.Context, in *model.StartWorkflowRequest, opts ...grpc.CallOption) (*StartWorkflowResponse, error)
	// GET /{name}/correlated/{correlationId}
	GetWorkflows(ctx context.Context, in *GetWorkflowsRequest, opts ...grpc.CallOption) (*GetWorkflowsResponse, error)
	// GET /{workflowId}
	GetWorkflowStatus(ctx context.Context, in *GetWorkflowStatusRequest, opts ...grpc.CallOption) (*model.Workflow, error)
	// DELETE /{workflodId}/remove
	RemoveWorkflow(ctx context.Context, in *RemoveWorkflowRequest, opts ...grpc.CallOption) (*RemoveWorkflowResponse, error)
	// GET /running/{name}
	GetRunningWorkflows(ctx context.Context, in *GetRunningWorkflowsRequest, opts ...grpc.CallOption) (*GetRunningWorkflowsResponse, error)
	// PUT /decide/{workflowId}
	DecideWorkflow(ctx context.Context, in *DecideWorkflowRequest, opts ...grpc.CallOption) (*DecideWorkflowResponse, error)
	// PUT /{workflowId}/pause
	PauseWorkflow(ctx context.Context, in *PauseWorkflowRequest, opts ...grpc.CallOption) (*PauseWorkflowResponse, error)
	// PUT /{workflowId}/pause
	ResumeWorkflow(ctx context.Context, in *ResumeWorkflowRequest, opts ...grpc.CallOption) (*ResumeWorkflowResponse, error)
	// PUT /{workflowId}/skiptask/{taskReferenceName}
	SkipTaskFromWorkflow(ctx context.Context, in *SkipTaskRequest, opts ...grpc.CallOption) (*SkipTaskResponse, error)
	// POST /{workflowId}/rerun
	RerunWorkflow(ctx context.Context, in *model.RerunWorkflowRequest, opts ...grpc.CallOption) (*RerunWorkflowResponse, error)
	// POST /{workflowId}/restart
	RestartWorkflow(ctx context.Context, in *RestartWorkflowRequest, opts ...grpc.CallOption) (*RestartWorkflowResponse, error)
	// POST /{workflowId}retry
	RetryWorkflow(ctx context.Context, in *RetryWorkflowRequest, opts ...grpc.CallOption) (*RetryWorkflowResponse, error)
	// POST /{workflowId}/resetcallbacks
	ResetWorkflowCallbacks(ctx context.Context, in *ResetWorkflowCallbacksRequest, opts ...grpc.CallOption) (*ResetWorkflowCallbacksResponse, error)
	// DELETE /{workflowId}
	TerminateWorkflow(ctx context.Context, in *TerminateWorkflowRequest, opts ...grpc.CallOption) (*TerminateWorkflowResponse, error)
	// GET /search
	Search(ctx context.Context, in *service.Request, opts ...grpc.CallOption) (*WorkflowSummarySearchResult, error)
	SearchByTasks(ctx context.Context, in *service.Request, opts ...grpc.CallOption) (*WorkflowSummarySearchResult, error)
}

type workflowServiceClient struct {
	cc *grpc.ClientConn
}

func NewWorkflowServiceClient(cc *grpc.ClientConn) WorkflowServiceClient {
	return &workflowServiceClient{cc}
}

func (c *workflowServiceClient) StartWorkflow(ctx context.Context, in *model.StartWorkflowRequest, opts ...grpc.CallOption) (*StartWorkflowResponse, error) {
	out := new(StartWorkflowResponse)
	err := c.cc.Invoke(ctx, "/conductor.service.WorkflowService/StartWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) GetWorkflows(ctx context.Context, in *GetWorkflowsRequest, opts ...grpc.CallOption) (*GetWorkflowsResponse, error) {
	out := new(GetWorkflowsResponse)
	err := c.cc.Invoke(ctx, "/conductor.service.WorkflowService/GetWorkflows", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) GetWorkflowStatus(ctx context.Context, in *GetWorkflowStatusRequest, opts ...grpc.CallOption) (*model.Workflow, error) {
	out := new(model.Workflow)
	err := c.cc.Invoke(ctx, "/conductor.service.WorkflowService/GetWorkflowStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) RemoveWorkflow(ctx context.Context, in *RemoveWorkflowRequest, opts ...grpc.CallOption) (*RemoveWorkflowResponse, error) {
	out := new(RemoveWorkflowResponse)
	err := c.cc.Invoke(ctx, "/conductor.service.WorkflowService/RemoveWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) GetRunningWorkflows(ctx context.Context, in *GetRunningWorkflowsRequest, opts ...grpc.CallOption) (*GetRunningWorkflowsResponse, error) {
	out := new(GetRunningWorkflowsResponse)
	err := c.cc.Invoke(ctx, "/conductor.service.WorkflowService/GetRunningWorkflows", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) DecideWorkflow(ctx context.Context, in *DecideWorkflowRequest, opts ...grpc.CallOption) (*DecideWorkflowResponse, error) {
	out := new(DecideWorkflowResponse)
	err := c.cc.Invoke(ctx, "/conductor.service.WorkflowService/DecideWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) PauseWorkflow(ctx context.Context, in *PauseWorkflowRequest, opts ...grpc.CallOption) (*PauseWorkflowResponse, error) {
	out := new(PauseWorkflowResponse)
	err := c.cc.Invoke(ctx, "/conductor.service.WorkflowService/PauseWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) ResumeWorkflow(ctx context.Context, in *ResumeWorkflowRequest, opts ...grpc.CallOption) (*ResumeWorkflowResponse, error) {
	out := new(ResumeWorkflowResponse)
	err := c.cc.Invoke(ctx, "/conductor.service.WorkflowService/ResumeWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) SkipTaskFromWorkflow(ctx context.Context, in *SkipTaskRequest, opts ...grpc.CallOption) (*SkipTaskResponse, error) {
	out := new(SkipTaskResponse)
	err := c.cc.Invoke(ctx, "/conductor.service.WorkflowService/SkipTaskFromWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) RerunWorkflow(ctx context.Context, in *model.RerunWorkflowRequest, opts ...grpc.CallOption) (*RerunWorkflowResponse, error) {
	out := new(RerunWorkflowResponse)
	err := c.cc.Invoke(ctx, "/conductor.service.WorkflowService/RerunWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) RestartWorkflow(ctx context.Context, in *RestartWorkflowRequest, opts ...grpc.CallOption) (*RestartWorkflowResponse, error) {
	out := new(RestartWorkflowResponse)
	err := c.cc.Invoke(ctx, "/conductor.service.WorkflowService/RestartWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) RetryWorkflow(ctx context.Context, in *RetryWorkflowRequest, opts ...grpc.CallOption) (*RetryWorkflowResponse, error) {
	out := new(RetryWorkflowResponse)
	err := c.cc.Invoke(ctx, "/conductor.service.WorkflowService/RetryWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) ResetWorkflowCallbacks(ctx context.Context, in *ResetWorkflowCallbacksRequest, opts ...grpc.CallOption) (*ResetWorkflowCallbacksResponse, error) {
	out := new(ResetWorkflowCallbacksResponse)
	err := c.cc.Invoke(ctx, "/conductor.service.WorkflowService/ResetWorkflowCallbacks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) TerminateWorkflow(ctx context.Context, in *TerminateWorkflowRequest, opts ...grpc.CallOption) (*TerminateWorkflowResponse, error) {
	out := new(TerminateWorkflowResponse)
	err := c.cc.Invoke(ctx, "/conductor.service.WorkflowService/TerminateWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) Search(ctx context.Context, in *service.Request, opts ...grpc.CallOption) (*WorkflowSummarySearchResult, error) {
	out := new(WorkflowSummarySearchResult)
	err := c.cc.Invoke(ctx, "/conductor.service.WorkflowService/Search", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workflowServiceClient) SearchByTasks(ctx context.Context, in *service.Request, opts ...grpc.CallOption) (*WorkflowSummarySearchResult, error) {
	out := new(WorkflowSummarySearchResult)
	err := c.cc.Invoke(ctx, "/conductor.service.WorkflowService/SearchByTasks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorkflowServiceServer is the server API for WorkflowService service.
type WorkflowServiceServer interface {
	// POST /
	StartWorkflow(context.Context, *model.StartWorkflowRequest) (*StartWorkflowResponse, error)
	// GET /{name}/correlated/{correlationId}
	GetWorkflows(context.Context, *GetWorkflowsRequest) (*GetWorkflowsResponse, error)
	// GET /{workflowId}
	GetWorkflowStatus(context.Context, *GetWorkflowStatusRequest) (*model.Workflow, error)
	// DELETE /{workflodId}/remove
	RemoveWorkflow(context.Context, *RemoveWorkflowRequest) (*RemoveWorkflowResponse, error)
	// GET /running/{name}
	GetRunningWorkflows(context.Context, *GetRunningWorkflowsRequest) (*GetRunningWorkflowsResponse, error)
	// PUT /decide/{workflowId}
	DecideWorkflow(context.Context, *DecideWorkflowRequest) (*DecideWorkflowResponse, error)
	// PUT /{workflowId}/pause
	PauseWorkflow(context.Context, *PauseWorkflowRequest) (*PauseWorkflowResponse, error)
	// PUT /{workflowId}/pause
	ResumeWorkflow(context.Context, *ResumeWorkflowRequest) (*ResumeWorkflowResponse, error)
	// PUT /{workflowId}/skiptask/{taskReferenceName}
	SkipTaskFromWorkflow(context.Context, *SkipTaskRequest) (*SkipTaskResponse, error)
	// POST /{workflowId}/rerun
	RerunWorkflow(context.Context, *model.RerunWorkflowRequest) (*RerunWorkflowResponse, error)
	// POST /{workflowId}/restart
	RestartWorkflow(context.Context, *RestartWorkflowRequest) (*RestartWorkflowResponse, error)
	// POST /{workflowId}retry
	RetryWorkflow(context.Context, *RetryWorkflowRequest) (*RetryWorkflowResponse, error)
	// POST /{workflowId}/resetcallbacks
	ResetWorkflowCallbacks(context.Context, *ResetWorkflowCallbacksRequest) (*ResetWorkflowCallbacksResponse, error)
	// DELETE /{workflowId}
	TerminateWorkflow(context.Context, *TerminateWorkflowRequest) (*TerminateWorkflowResponse, error)
	// GET /search
	Search(context.Context, *service.Request) (*WorkflowSummarySearchResult, error)
	SearchByTasks(context.Context, *service.Request) (*WorkflowSummarySearchResult, error)
}

// UnimplementedWorkflowServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWorkflowServiceServer struct {
}

func (*UnimplementedWorkflowServiceServer) StartWorkflow(ctx context.Context, req *model.StartWorkflowRequest) (*StartWorkflowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartWorkflow not implemented")
}
func (*UnimplementedWorkflowServiceServer) GetWorkflows(ctx context.Context, req *GetWorkflowsRequest) (*GetWorkflowsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkflows not implemented")
}
func (*UnimplementedWorkflowServiceServer) GetWorkflowStatus(ctx context.Context, req *GetWorkflowStatusRequest) (*model.Workflow, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWorkflowStatus not implemented")
}
func (*UnimplementedWorkflowServiceServer) RemoveWorkflow(ctx context.Context, req *RemoveWorkflowRequest) (*RemoveWorkflowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveWorkflow not implemented")
}
func (*UnimplementedWorkflowServiceServer) GetRunningWorkflows(ctx context.Context, req *GetRunningWorkflowsRequest) (*GetRunningWorkflowsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRunningWorkflows not implemented")
}
func (*UnimplementedWorkflowServiceServer) DecideWorkflow(ctx context.Context, req *DecideWorkflowRequest) (*DecideWorkflowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecideWorkflow not implemented")
}
func (*UnimplementedWorkflowServiceServer) PauseWorkflow(ctx context.Context, req *PauseWorkflowRequest) (*PauseWorkflowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PauseWorkflow not implemented")
}
func (*UnimplementedWorkflowServiceServer) ResumeWorkflow(ctx context.Context, req *ResumeWorkflowRequest) (*ResumeWorkflowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResumeWorkflow not implemented")
}
func (*UnimplementedWorkflowServiceServer) SkipTaskFromWorkflow(ctx context.Context, req *SkipTaskRequest) (*SkipTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SkipTaskFromWorkflow not implemented")
}
func (*UnimplementedWorkflowServiceServer) RerunWorkflow(ctx context.Context, req *model.RerunWorkflowRequest) (*RerunWorkflowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RerunWorkflow not implemented")
}
func (*UnimplementedWorkflowServiceServer) RestartWorkflow(ctx context.Context, req *RestartWorkflowRequest) (*RestartWorkflowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RestartWorkflow not implemented")
}
func (*UnimplementedWorkflowServiceServer) RetryWorkflow(ctx context.Context, req *RetryWorkflowRequest) (*RetryWorkflowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetryWorkflow not implemented")
}
func (*UnimplementedWorkflowServiceServer) ResetWorkflowCallbacks(ctx context.Context, req *ResetWorkflowCallbacksRequest) (*ResetWorkflowCallbacksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetWorkflowCallbacks not implemented")
}
func (*UnimplementedWorkflowServiceServer) TerminateWorkflow(ctx context.Context, req *TerminateWorkflowRequest) (*TerminateWorkflowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TerminateWorkflow not implemented")
}
func (*UnimplementedWorkflowServiceServer) Search(ctx context.Context, req *service.Request) (*WorkflowSummarySearchResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Search not implemented")
}
func (*UnimplementedWorkflowServiceServer) SearchByTasks(ctx context.Context, req *service.Request) (*WorkflowSummarySearchResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SearchByTasks not implemented")
}

func RegisterWorkflowServiceServer(s *grpc.Server, srv WorkflowServiceServer) {
	s.RegisterService(&_WorkflowService_serviceDesc, srv)
}

func _WorkflowService_StartWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(model.StartWorkflowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).StartWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.service.WorkflowService/StartWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).StartWorkflow(ctx, req.(*model.StartWorkflowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_GetWorkflows_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkflowsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).GetWorkflows(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.service.WorkflowService/GetWorkflows",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).GetWorkflows(ctx, req.(*GetWorkflowsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_GetWorkflowStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWorkflowStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).GetWorkflowStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.service.WorkflowService/GetWorkflowStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).GetWorkflowStatus(ctx, req.(*GetWorkflowStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_RemoveWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveWorkflowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).RemoveWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.service.WorkflowService/RemoveWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).RemoveWorkflow(ctx, req.(*RemoveWorkflowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_GetRunningWorkflows_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRunningWorkflowsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).GetRunningWorkflows(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.service.WorkflowService/GetRunningWorkflows",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).GetRunningWorkflows(ctx, req.(*GetRunningWorkflowsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_DecideWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecideWorkflowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).DecideWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.service.WorkflowService/DecideWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).DecideWorkflow(ctx, req.(*DecideWorkflowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_PauseWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PauseWorkflowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).PauseWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.service.WorkflowService/PauseWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).PauseWorkflow(ctx, req.(*PauseWorkflowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_ResumeWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResumeWorkflowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).ResumeWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.service.WorkflowService/ResumeWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).ResumeWorkflow(ctx, req.(*ResumeWorkflowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_SkipTaskFromWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SkipTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).SkipTaskFromWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.service.WorkflowService/SkipTaskFromWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).SkipTaskFromWorkflow(ctx, req.(*SkipTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_RerunWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(model.RerunWorkflowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).RerunWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.service.WorkflowService/RerunWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).RerunWorkflow(ctx, req.(*model.RerunWorkflowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_RestartWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RestartWorkflowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).RestartWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.service.WorkflowService/RestartWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).RestartWorkflow(ctx, req.(*RestartWorkflowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_RetryWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetryWorkflowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).RetryWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.service.WorkflowService/RetryWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).RetryWorkflow(ctx, req.(*RetryWorkflowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_ResetWorkflowCallbacks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetWorkflowCallbacksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).ResetWorkflowCallbacks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.service.WorkflowService/ResetWorkflowCallbacks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).ResetWorkflowCallbacks(ctx, req.(*ResetWorkflowCallbacksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_TerminateWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TerminateWorkflowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).TerminateWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.service.WorkflowService/TerminateWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).TerminateWorkflow(ctx, req.(*TerminateWorkflowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_Search_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(service.Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).Search(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.service.WorkflowService/Search",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).Search(ctx, req.(*service.Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _WorkflowService_SearchByTasks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(service.Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkflowServiceServer).SearchByTasks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/conductor.service.WorkflowService/SearchByTasks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkflowServiceServer).SearchByTasks(ctx, req.(*service.Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _WorkflowService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "conductor.service.WorkflowService",
	HandlerType: (*WorkflowServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartWorkflow",
			Handler:    _WorkflowService_StartWorkflow_Handler,
		},
		{
			MethodName: "GetWorkflows",
			Handler:    _WorkflowService_GetWorkflows_Handler,
		},
		{
			MethodName: "GetWorkflowStatus",
			Handler:    _WorkflowService_GetWorkflowStatus_Handler,
		},
		{
			MethodName: "RemoveWorkflow",
			Handler:    _WorkflowService_RemoveWorkflow_Handler,
		},
		{
			MethodName: "GetRunningWorkflows",
			Handler:    _WorkflowService_GetRunningWorkflows_Handler,
		},
		{
			MethodName: "DecideWorkflow",
			Handler:    _WorkflowService_DecideWorkflow_Handler,
		},
		{
			MethodName: "PauseWorkflow",
			Handler:    _WorkflowService_PauseWorkflow_Handler,
		},
		{
			MethodName: "ResumeWorkflow",
			Handler:    _WorkflowService_ResumeWorkflow_Handler,
		},
		{
			MethodName: "SkipTaskFromWorkflow",
			Handler:    _WorkflowService_SkipTaskFromWorkflow_Handler,
		},
		{
			MethodName: "RerunWorkflow",
			Handler:    _WorkflowService_RerunWorkflow_Handler,
		},
		{
			MethodName: "RestartWorkflow",
			Handler:    _WorkflowService_RestartWorkflow_Handler,
		},
		{
			MethodName: "RetryWorkflow",
			Handler:    _WorkflowService_RetryWorkflow_Handler,
		},
		{
			MethodName: "ResetWorkflowCallbacks",
			Handler:    _WorkflowService_ResetWorkflowCallbacks_Handler,
		},
		{
			MethodName: "TerminateWorkflow",
			Handler:    _WorkflowService_TerminateWorkflow_Handler,
		},
		{
			MethodName: "Search",
			Handler:    _WorkflowService_Search_Handler,
		},
		{
			MethodName: "SearchByTasks",
			Handler:    _WorkflowService_SearchByTasks_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service/workflow_service.proto",
}
